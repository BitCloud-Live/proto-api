// Code generated by protoc-gen-go. DO NOT EDIT.
// source: YB.proto

package yb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActivityTag int32

const (
	ActivityTag_None          ActivityTag = 0
	ActivityTag_User          ActivityTag = 1
	ActivityTag_Payment       ActivityTag = 2
	ActivityTag_Application   ActivityTag = 3
	ActivityTag_Domain        ActivityTag = 4
	ActivityTag_Service       ActivityTag = 5
	ActivityTag_Image         ActivityTag = 6
	ActivityTag_ObjectStorage ActivityTag = 7
	ActivityTag_BlockStorage  ActivityTag = 8
	// Bindings
	ActivityTag_AppSrvBinding ActivityTag = 9
	ActivityTag_AppDomBinding ActivityTag = 10
	ActivityTag_AppVolBinding ActivityTag = 11
	ActivityTag_SrvDomBinding ActivityTag = 12
)

var ActivityTag_name = map[int32]string{
	0:  "None",
	1:  "User",
	2:  "Payment",
	3:  "Application",
	4:  "Domain",
	5:  "Service",
	6:  "Image",
	7:  "ObjectStorage",
	8:  "BlockStorage",
	9:  "AppSrvBinding",
	10: "AppDomBinding",
	11: "AppVolBinding",
	12: "SrvDomBinding",
}
var ActivityTag_value = map[string]int32{
	"None":          0,
	"User":          1,
	"Payment":       2,
	"Application":   3,
	"Domain":        4,
	"Service":       5,
	"Image":         6,
	"ObjectStorage": 7,
	"BlockStorage":  8,
	"AppSrvBinding": 9,
	"AppDomBinding": 10,
	"AppVolBinding": 11,
	"SrvDomBinding": 12,
}

func (x ActivityTag) String() string {
	return proto.EnumName(ActivityTag_name, int32(x))
}
func (ActivityTag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{0}
}

type LoginReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{0}
}
func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (dst *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(dst, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthenticationRes struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticationRes) Reset()         { *m = AuthenticationRes{} }
func (m *AuthenticationRes) String() string { return proto.CompactTextString(m) }
func (*AuthenticationRes) ProtoMessage()    {}
func (*AuthenticationRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{1}
}
func (m *AuthenticationRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticationRes.Unmarshal(m, b)
}
func (m *AuthenticationRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticationRes.Marshal(b, m, deterministic)
}
func (dst *AuthenticationRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationRes.Merge(dst, src)
}
func (m *AuthenticationRes) XXX_Size() int {
	return xxx_messageInfo_AuthenticationRes.Size(m)
}
func (m *AuthenticationRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationRes.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationRes proto.InternalMessageInfo

func (m *AuthenticationRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Account struct {
	Credits  string `protobuf:"bytes,1,opt,name=credits,proto3" json:"credits,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Plan     string `protobuf:"bytes,4,opt,name=plan,proto3" json:"plan,omitempty"`
	Address  string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Code     string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	Mobi     string `protobuf:"bytes,7,opt,name=mobi,proto3" json:"mobi,omitempty"`
	// variables will be skipped in a update request
	Variables            map[string]*GeneralVariable `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{2}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetCredits() string {
	if m != nil {
		return m.Credits
	}
	return ""
}

func (m *Account) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *Account) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Account) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Account) GetMobi() string {
	if m != nil {
		return m.Mobi
	}
	return ""
}

func (m *Account) GetVariables() map[string]*GeneralVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{3}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// ID for select [service, application, image]
type Identity struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{4}
}
func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (dst *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(dst, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

func (m *Identity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{5}
}
func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (dst *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(dst, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type GeneralVariable struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	DefaultValue         string   `protobuf:"bytes,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	IsRequired           bool     `protobuf:"varint,4,opt,name=isRequired,proto3" json:"isRequired,omitempty"`
	Updateable           bool     `protobuf:"varint,5,opt,name=updateable,proto3" json:"updateable,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Choices              []string `protobuf:"bytes,8,rep,name=choices,proto3" json:"choices,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralVariable) Reset()         { *m = GeneralVariable{} }
func (m *GeneralVariable) String() string { return proto.CompactTextString(m) }
func (*GeneralVariable) ProtoMessage()    {}
func (*GeneralVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{6}
}
func (m *GeneralVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralVariable.Unmarshal(m, b)
}
func (m *GeneralVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralVariable.Marshal(b, m, deterministic)
}
func (dst *GeneralVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralVariable.Merge(dst, src)
}
func (m *GeneralVariable) XXX_Size() int {
	return xxx_messageInfo_GeneralVariable.Size(m)
}
func (m *GeneralVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralVariable.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralVariable proto.InternalMessageInfo

func (m *GeneralVariable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GeneralVariable) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *GeneralVariable) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *GeneralVariable) GetIsRequired() bool {
	if m != nil {
		return m.IsRequired
	}
	return false
}

func (m *GeneralVariable) GetUpdateable() bool {
	if m != nil {
		return m.Updateable
	}
	return false
}

func (m *GeneralVariable) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GeneralVariable) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GeneralVariable) GetChoices() []string {
	if m != nil {
		return m.Choices
	}
	return nil
}

type AttachIdentity struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Attachment           string   `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachIdentity) Reset()         { *m = AttachIdentity{} }
func (m *AttachIdentity) String() string { return proto.CompactTextString(m) }
func (*AttachIdentity) ProtoMessage()    {}
func (*AttachIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{7}
}
func (m *AttachIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachIdentity.Unmarshal(m, b)
}
func (m *AttachIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachIdentity.Marshal(b, m, deterministic)
}
func (dst *AttachIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachIdentity.Merge(dst, src)
}
func (m *AttachIdentity) XXX_Size() int {
	return xxx_messageInfo_AttachIdentity.Size(m)
}
func (m *AttachIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_AttachIdentity proto.InternalMessageInfo

func (m *AttachIdentity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AttachIdentity) GetAttachment() string {
	if m != nil {
		return m.Attachment
	}
	return ""
}

type AppListReq struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	App                  string   `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppListReq) Reset()         { *m = AppListReq{} }
func (m *AppListReq) String() string { return proto.CompactTextString(m) }
func (*AppListReq) ProtoMessage()    {}
func (*AppListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{8}
}
func (m *AppListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppListReq.Unmarshal(m, b)
}
func (m *AppListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppListReq.Marshal(b, m, deterministic)
}
func (dst *AppListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppListReq.Merge(dst, src)
}
func (m *AppListReq) XXX_Size() int {
	return xxx_messageInfo_AppListReq.Size(m)
}
func (m *AppListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppListReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppListReq proto.InternalMessageInfo

func (m *AppListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *AppListReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type ListReq struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{9}
}
func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (dst *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(dst, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ListStatusRes struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Names                []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStatusRes) Reset()         { *m = ListStatusRes{} }
func (m *ListStatusRes) String() string { return proto.CompactTextString(m) }
func (*ListStatusRes) ProtoMessage()    {}
func (*ListStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{10}
}
func (m *ListStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStatusRes.Unmarshal(m, b)
}
func (m *ListStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStatusRes.Marshal(b, m, deterministic)
}
func (dst *ListStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStatusRes.Merge(dst, src)
}
func (m *ListStatusRes) XXX_Size() int {
	return xxx_messageInfo_ListStatusRes.Size(m)
}
func (m *ListStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListStatusRes proto.InternalMessageInfo

func (m *ListStatusRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ListStatusRes) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type Chunk struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{11}
}
func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (dst *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(dst, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type PortforwardRes struct {
	Svc                  string   `protobuf:"bytes,1,opt,name=svc,proto3" json:"svc,omitempty"`
	Ports                []string `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	Token                []byte   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	ProxyHost            string   `protobuf:"bytes,4,opt,name=proxyHost,proto3" json:"proxyHost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortforwardRes) Reset()         { *m = PortforwardRes{} }
func (m *PortforwardRes) String() string { return proto.CompactTextString(m) }
func (*PortforwardRes) ProtoMessage()    {}
func (*PortforwardRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{12}
}
func (m *PortforwardRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortforwardRes.Unmarshal(m, b)
}
func (m *PortforwardRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortforwardRes.Marshal(b, m, deterministic)
}
func (dst *PortforwardRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortforwardRes.Merge(dst, src)
}
func (m *PortforwardRes) XXX_Size() int {
	return xxx_messageInfo_PortforwardRes.Size(m)
}
func (m *PortforwardRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PortforwardRes.DiscardUnknown(m)
}

var xxx_messageInfo_PortforwardRes proto.InternalMessageInfo

func (m *PortforwardRes) GetSvc() string {
	if m != nil {
		return m.Svc
	}
	return ""
}

func (m *PortforwardRes) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *PortforwardRes) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *PortforwardRes) GetProxyHost() string {
	if m != nil {
		return m.ProxyHost
	}
	return ""
}

type DomainCreateReq struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Tls                  bool     `protobuf:"varint,2,opt,name=tls,proto3" json:"tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainCreateReq) Reset()         { *m = DomainCreateReq{} }
func (m *DomainCreateReq) String() string { return proto.CompactTextString(m) }
func (*DomainCreateReq) ProtoMessage()    {}
func (*DomainCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{13}
}
func (m *DomainCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainCreateReq.Unmarshal(m, b)
}
func (m *DomainCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainCreateReq.Marshal(b, m, deterministic)
}
func (dst *DomainCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainCreateReq.Merge(dst, src)
}
func (m *DomainCreateReq) XXX_Size() int {
	return xxx_messageInfo_DomainCreateReq.Size(m)
}
func (m *DomainCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_DomainCreateReq proto.InternalMessageInfo

func (m *DomainCreateReq) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainCreateReq) GetTls() bool {
	if m != nil {
		return m.Tls
	}
	return false
}

type DomainStatusRes struct {
	Created    *Timestamp        `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated    *Timestamp        `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Name       string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Domain     string            `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Tls        string            `protobuf:"bytes,5,opt,name=tls,proto3" json:"tls,omitempty"`
	AttachedTo map[string]string `protobuf:"bytes,6,rep,name=attachedTo,proto3" json:"attachedTo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Added in v2.3 patch
	Path                 string   `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainStatusRes) Reset()         { *m = DomainStatusRes{} }
func (m *DomainStatusRes) String() string { return proto.CompactTextString(m) }
func (*DomainStatusRes) ProtoMessage()    {}
func (*DomainStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{14}
}
func (m *DomainStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainStatusRes.Unmarshal(m, b)
}
func (m *DomainStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainStatusRes.Marshal(b, m, deterministic)
}
func (dst *DomainStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainStatusRes.Merge(dst, src)
}
func (m *DomainStatusRes) XXX_Size() int {
	return xxx_messageInfo_DomainStatusRes.Size(m)
}
func (m *DomainStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_DomainStatusRes proto.InternalMessageInfo

func (m *DomainStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *DomainStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *DomainStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DomainStatusRes) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainStatusRes) GetTls() string {
	if m != nil {
		return m.Tls
	}
	return ""
}

func (m *DomainStatusRes) GetAttachedTo() map[string]string {
	if m != nil {
		return m.AttachedTo
	}
	return nil
}

func (m *DomainStatusRes) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DomainListRes struct {
	Index                int32              `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Domains              []*DomainStatusRes `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DomainListRes) Reset()         { *m = DomainListRes{} }
func (m *DomainListRes) String() string { return proto.CompactTextString(m) }
func (*DomainListRes) ProtoMessage()    {}
func (*DomainListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{15}
}
func (m *DomainListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainListRes.Unmarshal(m, b)
}
func (m *DomainListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainListRes.Marshal(b, m, deterministic)
}
func (dst *DomainListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainListRes.Merge(dst, src)
}
func (m *DomainListRes) XXX_Size() int {
	return xxx_messageInfo_DomainListRes.Size(m)
}
func (m *DomainListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainListRes.DiscardUnknown(m)
}

var xxx_messageInfo_DomainListRes proto.InternalMessageInfo

func (m *DomainListRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *DomainListRes) GetDomains() []*DomainStatusRes {
	if m != nil {
		return m.Domains
	}
	return nil
}

// For embedded response
// AttachedDomainInfo Deprecated: will be deleted in v3.0
type AttachedDomainInfo struct {
	Domain       string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Endpoint     string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	EndpointType string `protobuf:"bytes,3,opt,name=endpointType,proto3" json:"endpointType,omitempty"`
	// Added in v2.3 patch
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachedDomainInfo) Reset()         { *m = AttachedDomainInfo{} }
func (m *AttachedDomainInfo) String() string { return proto.CompactTextString(m) }
func (*AttachedDomainInfo) ProtoMessage()    {}
func (*AttachedDomainInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{16}
}
func (m *AttachedDomainInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachedDomainInfo.Unmarshal(m, b)
}
func (m *AttachedDomainInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachedDomainInfo.Marshal(b, m, deterministic)
}
func (dst *AttachedDomainInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachedDomainInfo.Merge(dst, src)
}
func (m *AttachedDomainInfo) XXX_Size() int {
	return xxx_messageInfo_AttachedDomainInfo.Size(m)
}
func (m *AttachedDomainInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachedDomainInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AttachedDomainInfo proto.InternalMessageInfo

func (m *AttachedDomainInfo) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *AttachedDomainInfo) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *AttachedDomainInfo) GetEndpointType() string {
	if m != nil {
		return m.EndpointType
	}
	return ""
}

func (m *AttachedDomainInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type VolumeCreateReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Spec                 string   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeCreateReq) Reset()         { *m = VolumeCreateReq{} }
func (m *VolumeCreateReq) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateReq) ProtoMessage()    {}
func (*VolumeCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{17}
}
func (m *VolumeCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateReq.Unmarshal(m, b)
}
func (m *VolumeCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateReq.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateReq.Merge(dst, src)
}
func (m *VolumeCreateReq) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateReq.Size(m)
}
func (m *VolumeCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateReq proto.InternalMessageInfo

func (m *VolumeCreateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeCreateReq) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

type VolumeMount struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Attachment           string   `protobuf:"bytes,2,opt,name=attachment,proto3" json:"attachment,omitempty"`
	MountPath            string   `protobuf:"bytes,3,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeMount) Reset()         { *m = VolumeMount{} }
func (m *VolumeMount) String() string { return proto.CompactTextString(m) }
func (*VolumeMount) ProtoMessage()    {}
func (*VolumeMount) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{18}
}
func (m *VolumeMount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeMount.Unmarshal(m, b)
}
func (m *VolumeMount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeMount.Marshal(b, m, deterministic)
}
func (dst *VolumeMount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeMount.Merge(dst, src)
}
func (m *VolumeMount) XXX_Size() int {
	return xxx_messageInfo_VolumeMount.Size(m)
}
func (m *VolumeMount) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeMount.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeMount proto.InternalMessageInfo

func (m *VolumeMount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeMount) GetAttachment() string {
	if m != nil {
		return m.Attachment
	}
	return ""
}

func (m *VolumeMount) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

type VolumeSpec struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Class                string   `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	Size                 string   `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSpec) Reset()         { *m = VolumeSpec{} }
func (m *VolumeSpec) String() string { return proto.CompactTextString(m) }
func (*VolumeSpec) ProtoMessage()    {}
func (*VolumeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{19}
}
func (m *VolumeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpec.Unmarshal(m, b)
}
func (m *VolumeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpec.Marshal(b, m, deterministic)
}
func (dst *VolumeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpec.Merge(dst, src)
}
func (m *VolumeSpec) XXX_Size() int {
	return xxx_messageInfo_VolumeSpec.Size(m)
}
func (m *VolumeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpec proto.InternalMessageInfo

func (m *VolumeSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeSpec) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *VolumeSpec) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

type VolumeSpecListRes struct {
	Index                int32         `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	VolumeSpecs          []*VolumeSpec `protobuf:"bytes,2,rep,name=volumeSpecs,proto3" json:"volumeSpecs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VolumeSpecListRes) Reset()         { *m = VolumeSpecListRes{} }
func (m *VolumeSpecListRes) String() string { return proto.CompactTextString(m) }
func (*VolumeSpecListRes) ProtoMessage()    {}
func (*VolumeSpecListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{20}
}
func (m *VolumeSpecListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpecListRes.Unmarshal(m, b)
}
func (m *VolumeSpecListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpecListRes.Marshal(b, m, deterministic)
}
func (dst *VolumeSpecListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpecListRes.Merge(dst, src)
}
func (m *VolumeSpecListRes) XXX_Size() int {
	return xxx_messageInfo_VolumeSpecListRes.Size(m)
}
func (m *VolumeSpecListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpecListRes.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpecListRes proto.InternalMessageInfo

func (m *VolumeSpecListRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *VolumeSpecListRes) GetVolumeSpecs() []*VolumeSpec {
	if m != nil {
		return m.VolumeSpecs
	}
	return nil
}

type VolumeStatusRes struct {
	Created              *Timestamp     `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *Timestamp     `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Name                 string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Spec                 *VolumeSpec    `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Mounts               []*VolumeMount `protobuf:"bytes,5,rep,name=mounts,proto3" json:"mounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VolumeStatusRes) Reset()         { *m = VolumeStatusRes{} }
func (m *VolumeStatusRes) String() string { return proto.CompactTextString(m) }
func (*VolumeStatusRes) ProtoMessage()    {}
func (*VolumeStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{21}
}
func (m *VolumeStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeStatusRes.Unmarshal(m, b)
}
func (m *VolumeStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeStatusRes.Marshal(b, m, deterministic)
}
func (dst *VolumeStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeStatusRes.Merge(dst, src)
}
func (m *VolumeStatusRes) XXX_Size() int {
	return xxx_messageInfo_VolumeStatusRes.Size(m)
}
func (m *VolumeStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeStatusRes proto.InternalMessageInfo

func (m *VolumeStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *VolumeStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *VolumeStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeStatusRes) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VolumeStatusRes) GetMounts() []*VolumeMount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

type VolumeListRes struct {
	Index                int32              `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Volumes              []*VolumeStatusRes `protobuf:"bytes,2,rep,name=volumes,proto3" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *VolumeListRes) Reset()         { *m = VolumeListRes{} }
func (m *VolumeListRes) String() string { return proto.CompactTextString(m) }
func (*VolumeListRes) ProtoMessage()    {}
func (*VolumeListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{22}
}
func (m *VolumeListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeListRes.Unmarshal(m, b)
}
func (m *VolumeListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeListRes.Marshal(b, m, deterministic)
}
func (dst *VolumeListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeListRes.Merge(dst, src)
}
func (m *VolumeListRes) XXX_Size() int {
	return xxx_messageInfo_VolumeListRes.Size(m)
}
func (m *VolumeListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeListRes.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeListRes proto.InternalMessageInfo

func (m *VolumeListRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *VolumeListRes) GetVolumes() []*VolumeStatusRes {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type ImgStatusRes struct {
	Created              *Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *Timestamp `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Tags                 []string   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImgStatusRes) Reset()         { *m = ImgStatusRes{} }
func (m *ImgStatusRes) String() string { return proto.CompactTextString(m) }
func (*ImgStatusRes) ProtoMessage()    {}
func (*ImgStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{23}
}
func (m *ImgStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgStatusRes.Unmarshal(m, b)
}
func (m *ImgStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgStatusRes.Marshal(b, m, deterministic)
}
func (dst *ImgStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgStatusRes.Merge(dst, src)
}
func (m *ImgStatusRes) XXX_Size() int {
	return xxx_messageInfo_ImgStatusRes.Size(m)
}
func (m *ImgStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_ImgStatusRes proto.InternalMessageInfo

func (m *ImgStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ImgStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *ImgStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ImgStatusRes) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ImgListRes struct {
	Index                int32           `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Imgs                 []*ImgStatusRes `protobuf:"bytes,2,rep,name=imgs,proto3" json:"imgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ImgListRes) Reset()         { *m = ImgListRes{} }
func (m *ImgListRes) String() string { return proto.CompactTextString(m) }
func (*ImgListRes) ProtoMessage()    {}
func (*ImgListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{24}
}
func (m *ImgListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgListRes.Unmarshal(m, b)
}
func (m *ImgListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgListRes.Marshal(b, m, deterministic)
}
func (dst *ImgListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgListRes.Merge(dst, src)
}
func (m *ImgListRes) XXX_Size() int {
	return xxx_messageInfo_ImgListRes.Size(m)
}
func (m *ImgListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgListRes.DiscardUnknown(m)
}

var xxx_messageInfo_ImgListRes proto.InternalMessageInfo

func (m *ImgListRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ImgListRes) GetImgs() []*ImgStatusRes {
	if m != nil {
		return m.Imgs
	}
	return nil
}

type ImgBuildReq struct {
	RepositoryTag        string   `protobuf:"bytes,1,opt,name=repositoryTag,proto3" json:"repositoryTag,omitempty"`
	RepositoryName       string   `protobuf:"bytes,2,opt,name=repositoryName,proto3" json:"repositoryName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgBuildReq) Reset()         { *m = ImgBuildReq{} }
func (m *ImgBuildReq) String() string { return proto.CompactTextString(m) }
func (*ImgBuildReq) ProtoMessage()    {}
func (*ImgBuildReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{25}
}
func (m *ImgBuildReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgBuildReq.Unmarshal(m, b)
}
func (m *ImgBuildReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgBuildReq.Marshal(b, m, deterministic)
}
func (dst *ImgBuildReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgBuildReq.Merge(dst, src)
}
func (m *ImgBuildReq) XXX_Size() int {
	return xxx_messageInfo_ImgBuildReq.Size(m)
}
func (m *ImgBuildReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgBuildReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImgBuildReq proto.InternalMessageInfo

func (m *ImgBuildReq) GetRepositoryTag() string {
	if m != nil {
		return m.RepositoryTag
	}
	return ""
}

func (m *ImgBuildReq) GetRepositoryName() string {
	if m != nil {
		return m.RepositoryName
	}
	return ""
}

type ServiceCondition struct {
	Condition            string     `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	Reason               string     `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Time                 *Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ServiceCondition) Reset()         { *m = ServiceCondition{} }
func (m *ServiceCondition) String() string { return proto.CompactTextString(m) }
func (*ServiceCondition) ProtoMessage()    {}
func (*ServiceCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{26}
}
func (m *ServiceCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceCondition.Unmarshal(m, b)
}
func (m *ServiceCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceCondition.Marshal(b, m, deterministic)
}
func (dst *ServiceCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceCondition.Merge(dst, src)
}
func (m *ServiceCondition) XXX_Size() int {
	return xxx_messageInfo_ServiceCondition.Size(m)
}
func (m *ServiceCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceCondition proto.InternalMessageInfo

func (m *ServiceCondition) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *ServiceCondition) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ServiceCondition) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type ProductRes struct {
	Name                 string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Plan                 []*Plan                     `protobuf:"bytes,3,rep,name=plan,proto3" json:"plan,omitempty"`
	Variables            map[string]*GeneralVariable `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ProductRes) Reset()         { *m = ProductRes{} }
func (m *ProductRes) String() string { return proto.CompactTextString(m) }
func (*ProductRes) ProtoMessage()    {}
func (*ProductRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{27}
}
func (m *ProductRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRes.Unmarshal(m, b)
}
func (m *ProductRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRes.Marshal(b, m, deterministic)
}
func (dst *ProductRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRes.Merge(dst, src)
}
func (m *ProductRes) XXX_Size() int {
	return xxx_messageInfo_ProductRes.Size(m)
}
func (m *ProductRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRes.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRes proto.InternalMessageInfo

func (m *ProductRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProductRes) GetPlan() []*Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *ProductRes) GetVariables() map[string]*GeneralVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ProductListRow struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductListRow) Reset()         { *m = ProductListRow{} }
func (m *ProductListRow) String() string { return proto.CompactTextString(m) }
func (*ProductListRow) ProtoMessage()    {}
func (*ProductListRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{28}
}
func (m *ProductListRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductListRow.Unmarshal(m, b)
}
func (m *ProductListRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductListRow.Marshal(b, m, deterministic)
}
func (dst *ProductListRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductListRow.Merge(dst, src)
}
func (m *ProductListRow) XXX_Size() int {
	return xxx_messageInfo_ProductListRow.Size(m)
}
func (m *ProductListRow) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductListRow.DiscardUnknown(m)
}

var xxx_messageInfo_ProductListRow proto.InternalMessageInfo

func (m *ProductListRow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductListRow) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type PrdListRes struct {
	Index                int32             `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Rows                 []*ProductListRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PrdListRes) Reset()         { *m = PrdListRes{} }
func (m *PrdListRes) String() string { return proto.CompactTextString(m) }
func (*PrdListRes) ProtoMessage()    {}
func (*PrdListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{29}
}
func (m *PrdListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrdListRes.Unmarshal(m, b)
}
func (m *PrdListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrdListRes.Marshal(b, m, deterministic)
}
func (dst *PrdListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrdListRes.Merge(dst, src)
}
func (m *PrdListRes) XXX_Size() int {
	return xxx_messageInfo_PrdListRes.Size(m)
}
func (m *PrdListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PrdListRes.DiscardUnknown(m)
}

var xxx_messageInfo_PrdListRes proto.InternalMessageInfo

func (m *PrdListRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PrdListRes) GetRows() []*ProductListRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

// TODO reset Variable
type SrvConfigSetReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Values               map[string]string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrvConfigSetReq) Reset()         { *m = SrvConfigSetReq{} }
func (m *SrvConfigSetReq) String() string { return proto.CompactTextString(m) }
func (*SrvConfigSetReq) ProtoMessage()    {}
func (*SrvConfigSetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{30}
}
func (m *SrvConfigSetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvConfigSetReq.Unmarshal(m, b)
}
func (m *SrvConfigSetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvConfigSetReq.Marshal(b, m, deterministic)
}
func (dst *SrvConfigSetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvConfigSetReq.Merge(dst, src)
}
func (m *SrvConfigSetReq) XXX_Size() int {
	return xxx_messageInfo_SrvConfigSetReq.Size(m)
}
func (m *SrvConfigSetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvConfigSetReq.DiscardUnknown(m)
}

var xxx_messageInfo_SrvConfigSetReq proto.InternalMessageInfo

func (m *SrvConfigSetReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrvConfigSetReq) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type Plan struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price                uint64            `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Off                  uint64            `protobuf:"varint,4,opt,name=off,proto3" json:"off,omitempty"`
	Extras               map[string]string `protobuf:"bytes,5,rep,name=extras,proto3" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Plan) Reset()         { *m = Plan{} }
func (m *Plan) String() string { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()    {}
func (*Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{31}
}
func (m *Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plan.Unmarshal(m, b)
}
func (m *Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plan.Marshal(b, m, deterministic)
}
func (dst *Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plan.Merge(dst, src)
}
func (m *Plan) XXX_Size() int {
	return xxx_messageInfo_Plan.Size(m)
}
func (m *Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_Plan proto.InternalMessageInfo

func (m *Plan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plan) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Plan) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Plan) GetOff() uint64 {
	if m != nil {
		return m.Off
	}
	return 0
}

func (m *Plan) GetExtras() map[string]string {
	if m != nil {
		return m.Extras
	}
	return nil
}

type SrvStatusRes struct {
	Created      *Timestamp            `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated      *Timestamp            `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Conditions   []*ServiceCondition   `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Name         string                `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Plan         string                `protobuf:"bytes,5,opt,name=plan,proto3" json:"plan,omitempty"`
	VcapServices string                `protobuf:"bytes,6,opt,name=vcapServices,proto3" json:"vcapServices,omitempty"`
	Domains      []*AttachedDomainInfo `protobuf:"bytes,7,rep,name=domains,proto3" json:"domains,omitempty"`
	Endpoints    []string              `protobuf:"bytes,8,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Added in v2.1 patch
	ServiceRefrence string `protobuf:"bytes,9,opt,name=serviceRefrence,proto3" json:"serviceRefrence,omitempty"`
	// Name(s) of the peer(s) that this service instance bounded to
	BoundTo              []string                    `protobuf:"bytes,10,rep,name=boundTo,proto3" json:"boundTo,omitempty"`
	Variables            map[string]*GeneralVariable `protobuf:"bytes,11,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SrvStatusRes) Reset()         { *m = SrvStatusRes{} }
func (m *SrvStatusRes) String() string { return proto.CompactTextString(m) }
func (*SrvStatusRes) ProtoMessage()    {}
func (*SrvStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{32}
}
func (m *SrvStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvStatusRes.Unmarshal(m, b)
}
func (m *SrvStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvStatusRes.Marshal(b, m, deterministic)
}
func (dst *SrvStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvStatusRes.Merge(dst, src)
}
func (m *SrvStatusRes) XXX_Size() int {
	return xxx_messageInfo_SrvStatusRes.Size(m)
}
func (m *SrvStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_SrvStatusRes proto.InternalMessageInfo

func (m *SrvStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *SrvStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *SrvStatusRes) GetConditions() []*ServiceCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *SrvStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrvStatusRes) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *SrvStatusRes) GetVcapServices() string {
	if m != nil {
		return m.VcapServices
	}
	return ""
}

func (m *SrvStatusRes) GetDomains() []*AttachedDomainInfo {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *SrvStatusRes) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *SrvStatusRes) GetServiceRefrence() string {
	if m != nil {
		return m.ServiceRefrence
	}
	return ""
}

func (m *SrvStatusRes) GetBoundTo() []string {
	if m != nil {
		return m.BoundTo
	}
	return nil
}

func (m *SrvStatusRes) GetVariables() map[string]*GeneralVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

type PunchedCard struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Oprator              string            `protobuf:"bytes,2,opt,name=oprator,proto3" json:"oprator,omitempty"`
	Values               map[string]string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PunchedCard) Reset()         { *m = PunchedCard{} }
func (m *PunchedCard) String() string { return proto.CompactTextString(m) }
func (*PunchedCard) ProtoMessage()    {}
func (*PunchedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{33}
}
func (m *PunchedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PunchedCard.Unmarshal(m, b)
}
func (m *PunchedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PunchedCard.Marshal(b, m, deterministic)
}
func (dst *PunchedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PunchedCard.Merge(dst, src)
}
func (m *PunchedCard) XXX_Size() int {
	return xxx_messageInfo_PunchedCard.Size(m)
}
func (m *PunchedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PunchedCard.DiscardUnknown(m)
}

var xxx_messageInfo_PunchedCard proto.InternalMessageInfo

func (m *PunchedCard) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PunchedCard) GetOprator() string {
	if m != nil {
		return m.Oprator
	}
	return ""
}

func (m *PunchedCard) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

// For embedded response
type ServiceRes struct {
	Updated *Timestamp `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	Name    string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Added in v2.1 patch
	ServiceRefrence string `protobuf:"bytes,3,opt,name=serviceRefrence,proto3" json:"serviceRefrence,omitempty"`
	Plan            string `protobuf:"bytes,4,opt,name=plan,proto3" json:"plan,omitempty"`
	// Latest condition
	Condition            *ServiceCondition `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ServiceRes) Reset()         { *m = ServiceRes{} }
func (m *ServiceRes) String() string { return proto.CompactTextString(m) }
func (*ServiceRes) ProtoMessage()    {}
func (*ServiceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{34}
}
func (m *ServiceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRes.Unmarshal(m, b)
}
func (m *ServiceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRes.Marshal(b, m, deterministic)
}
func (dst *ServiceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRes.Merge(dst, src)
}
func (m *ServiceRes) XXX_Size() int {
	return xxx_messageInfo_ServiceRes.Size(m)
}
func (m *ServiceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRes.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRes proto.InternalMessageInfo

func (m *ServiceRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *ServiceRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceRes) GetServiceRefrence() string {
	if m != nil {
		return m.ServiceRefrence
	}
	return ""
}

func (m *ServiceRes) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *ServiceRes) GetCondition() *ServiceCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type SrvListRes struct {
	Index                int32         `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Services             []*ServiceRes `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SrvListRes) Reset()         { *m = SrvListRes{} }
func (m *SrvListRes) String() string { return proto.CompactTextString(m) }
func (*SrvListRes) ProtoMessage()    {}
func (*SrvListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{35}
}
func (m *SrvListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvListRes.Unmarshal(m, b)
}
func (m *SrvListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvListRes.Marshal(b, m, deterministic)
}
func (dst *SrvListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvListRes.Merge(dst, src)
}
func (m *SrvListRes) XXX_Size() int {
	return xxx_messageInfo_SrvListRes.Size(m)
}
func (m *SrvListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvListRes.DiscardUnknown(m)
}

var xxx_messageInfo_SrvListRes proto.InternalMessageInfo

func (m *SrvListRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SrvListRes) GetServices() []*ServiceRes {
	if m != nil {
		return m.Services
	}
	return nil
}

type SrvDomainAttachReq struct {
	AttachIdentity *AttachIdentity `protobuf:"bytes,1,opt,name=attachIdentity,proto3" json:"attachIdentity,omitempty"`
	Endpoint       string          `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Added in v2.3 patch
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvDomainAttachReq) Reset()         { *m = SrvDomainAttachReq{} }
func (m *SrvDomainAttachReq) String() string { return proto.CompactTextString(m) }
func (*SrvDomainAttachReq) ProtoMessage()    {}
func (*SrvDomainAttachReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{36}
}
func (m *SrvDomainAttachReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvDomainAttachReq.Unmarshal(m, b)
}
func (m *SrvDomainAttachReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvDomainAttachReq.Marshal(b, m, deterministic)
}
func (dst *SrvDomainAttachReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvDomainAttachReq.Merge(dst, src)
}
func (m *SrvDomainAttachReq) XXX_Size() int {
	return xxx_messageInfo_SrvDomainAttachReq.Size(m)
}
func (m *SrvDomainAttachReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvDomainAttachReq.DiscardUnknown(m)
}

var xxx_messageInfo_SrvDomainAttachReq proto.InternalMessageInfo

func (m *SrvDomainAttachReq) GetAttachIdentity() *AttachIdentity {
	if m != nil {
		return m.AttachIdentity
	}
	return nil
}

func (m *SrvDomainAttachReq) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *SrvDomainAttachReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SrvCreateReq struct {
	ProductName          string            `protobuf:"bytes,1,opt,name=productName,proto3" json:"productName,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Plan                 string            `protobuf:"bytes,3,opt,name=plan,proto3" json:"plan,omitempty"`
	Values               map[string]string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrvCreateReq) Reset()         { *m = SrvCreateReq{} }
func (m *SrvCreateReq) String() string { return proto.CompactTextString(m) }
func (*SrvCreateReq) ProtoMessage()    {}
func (*SrvCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{37}
}
func (m *SrvCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvCreateReq.Unmarshal(m, b)
}
func (m *SrvCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvCreateReq.Marshal(b, m, deterministic)
}
func (dst *SrvCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvCreateReq.Merge(dst, src)
}
func (m *SrvCreateReq) XXX_Size() int {
	return xxx_messageInfo_SrvCreateReq.Size(m)
}
func (m *SrvCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_SrvCreateReq proto.InternalMessageInfo

func (m *SrvCreateReq) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *SrvCreateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrvCreateReq) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *SrvCreateReq) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type AppStatusRes struct {
	Created              *Timestamp                  `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *Timestamp                  `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Name                 string                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Plan                 string                      `protobuf:"bytes,4,opt,name=plan,proto3" json:"plan,omitempty"`
	VcapServices         string                      `protobuf:"bytes,5,opt,name=vcapServices,proto3" json:"vcapServices,omitempty"`
	Variables            map[string]*GeneralVariable `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EnvironmentVariables map[string]string           `protobuf:"bytes,7,rep,name=environmentVariables,proto3" json:"environmentVariables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Instances            []*Instance                 `protobuf:"bytes,8,rep,name=instances,proto3" json:"instances,omitempty"`
	Conditions           []*ServiceCondition         `protobuf:"bytes,9,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Routes               []string                    `protobuf:"bytes,10,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AppStatusRes) Reset()         { *m = AppStatusRes{} }
func (m *AppStatusRes) String() string { return proto.CompactTextString(m) }
func (*AppStatusRes) ProtoMessage()    {}
func (*AppStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{38}
}
func (m *AppStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppStatusRes.Unmarshal(m, b)
}
func (m *AppStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppStatusRes.Marshal(b, m, deterministic)
}
func (dst *AppStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppStatusRes.Merge(dst, src)
}
func (m *AppStatusRes) XXX_Size() int {
	return xxx_messageInfo_AppStatusRes.Size(m)
}
func (m *AppStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AppStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_AppStatusRes proto.InternalMessageInfo

func (m *AppStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *AppStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *AppStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppStatusRes) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *AppStatusRes) GetVcapServices() string {
	if m != nil {
		return m.VcapServices
	}
	return ""
}

func (m *AppStatusRes) GetVariables() map[string]*GeneralVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *AppStatusRes) GetEnvironmentVariables() map[string]string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *AppStatusRes) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *AppStatusRes) GetConditions() []*ServiceCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *AppStatusRes) GetRoutes() []string {
	if m != nil {
		return m.Routes
	}
	return nil
}

type Instance struct {
	Created              *Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ram                  string     `protobuf:"bytes,3,opt,name=ram,proto3" json:"ram,omitempty"`
	Cpu                  string     `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{39}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (dst *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(dst, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetRam() string {
	if m != nil {
		return m.Ram
	}
	return ""
}

func (m *Instance) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

type AppCreateReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Plan                 string            `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	Values               map[string]string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppCreateReq) Reset()         { *m = AppCreateReq{} }
func (m *AppCreateReq) String() string { return proto.CompactTextString(m) }
func (*AppCreateReq) ProtoMessage()    {}
func (*AppCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{40}
}
func (m *AppCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppCreateReq.Unmarshal(m, b)
}
func (m *AppCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppCreateReq.Marshal(b, m, deterministic)
}
func (dst *AppCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppCreateReq.Merge(dst, src)
}
func (m *AppCreateReq) XXX_Size() int {
	return xxx_messageInfo_AppCreateReq.Size(m)
}
func (m *AppCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppCreateReq proto.InternalMessageInfo

func (m *AppCreateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppCreateReq) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *AppCreateReq) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

// name for select [application, image]
type TailRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The length of time (like 5s, 2m, or 3h, higher than zero), default to 0s.
	Since                string   `protobuf:"bytes,2,opt,name=since,proto3" json:"since,omitempty"`
	Tail                 uint64   `protobuf:"varint,3,opt,name=tail,proto3" json:"tail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TailRequest) Reset()         { *m = TailRequest{} }
func (m *TailRequest) String() string { return proto.CompactTextString(m) }
func (*TailRequest) ProtoMessage()    {}
func (*TailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{41}
}
func (m *TailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TailRequest.Unmarshal(m, b)
}
func (m *TailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TailRequest.Marshal(b, m, deterministic)
}
func (dst *TailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TailRequest.Merge(dst, src)
}
func (m *TailRequest) XXX_Size() int {
	return xxx_messageInfo_TailRequest.Size(m)
}
func (m *TailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TailRequest proto.InternalMessageInfo

func (m *TailRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TailRequest) GetSince() string {
	if m != nil {
		return m.Since
	}
	return ""
}

func (m *TailRequest) GetTail() uint64 {
	if m != nil {
		return m.Tail
	}
	return 0
}

// Execute commands inside an existing application
type ShellReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command              []string `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShellReq) Reset()         { *m = ShellReq{} }
func (m *ShellReq) String() string { return proto.CompactTextString(m) }
func (*ShellReq) ProtoMessage()    {}
func (*ShellReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{42}
}
func (m *ShellReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShellReq.Unmarshal(m, b)
}
func (m *ShellReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShellReq.Marshal(b, m, deterministic)
}
func (dst *ShellReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShellReq.Merge(dst, src)
}
func (m *ShellReq) XXX_Size() int {
	return xxx_messageInfo_ShellReq.Size(m)
}
func (m *ShellReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ShellReq.DiscardUnknown(m)
}

var xxx_messageInfo_ShellReq proto.InternalMessageInfo

func (m *ShellReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShellReq) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

type UnsetReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variables            []string `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsetReq) Reset()         { *m = UnsetReq{} }
func (m *UnsetReq) String() string { return proto.CompactTextString(m) }
func (*UnsetReq) ProtoMessage()    {}
func (*UnsetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{43}
}
func (m *UnsetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsetReq.Unmarshal(m, b)
}
func (m *UnsetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsetReq.Marshal(b, m, deterministic)
}
func (dst *UnsetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsetReq.Merge(dst, src)
}
func (m *UnsetReq) XXX_Size() int {
	return xxx_messageInfo_UnsetReq.Size(m)
}
func (m *UnsetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsetReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnsetReq proto.InternalMessageInfo

func (m *UnsetReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UnsetReq) GetVariables() []string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ChangePlanReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Plan                 string   `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePlanReq) Reset()         { *m = ChangePlanReq{} }
func (m *ChangePlanReq) String() string { return proto.CompactTextString(m) }
func (*ChangePlanReq) ProtoMessage()    {}
func (*ChangePlanReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{44}
}
func (m *ChangePlanReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePlanReq.Unmarshal(m, b)
}
func (m *ChangePlanReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePlanReq.Marshal(b, m, deterministic)
}
func (dst *ChangePlanReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePlanReq.Merge(dst, src)
}
func (m *ChangePlanReq) XXX_Size() int {
	return xxx_messageInfo_ChangePlanReq.Size(m)
}
func (m *ChangePlanReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePlanReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePlanReq proto.InternalMessageInfo

func (m *ChangePlanReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChangePlanReq) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

type AppAddEnvironmentVariableReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variables            map[string]string `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppAddEnvironmentVariableReq) Reset()         { *m = AppAddEnvironmentVariableReq{} }
func (m *AppAddEnvironmentVariableReq) String() string { return proto.CompactTextString(m) }
func (*AppAddEnvironmentVariableReq) ProtoMessage()    {}
func (*AppAddEnvironmentVariableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{45}
}
func (m *AppAddEnvironmentVariableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppAddEnvironmentVariableReq.Unmarshal(m, b)
}
func (m *AppAddEnvironmentVariableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppAddEnvironmentVariableReq.Marshal(b, m, deterministic)
}
func (dst *AppAddEnvironmentVariableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppAddEnvironmentVariableReq.Merge(dst, src)
}
func (m *AppAddEnvironmentVariableReq) XXX_Size() int {
	return xxx_messageInfo_AppAddEnvironmentVariableReq.Size(m)
}
func (m *AppAddEnvironmentVariableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppAddEnvironmentVariableReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppAddEnvironmentVariableReq proto.InternalMessageInfo

func (m *AppAddEnvironmentVariableReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppAddEnvironmentVariableReq) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type AppSrvBindReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppSrvBindReq) Reset()         { *m = AppSrvBindReq{} }
func (m *AppSrvBindReq) String() string { return proto.CompactTextString(m) }
func (*AppSrvBindReq) ProtoMessage()    {}
func (*AppSrvBindReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{46}
}
func (m *AppSrvBindReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppSrvBindReq.Unmarshal(m, b)
}
func (m *AppSrvBindReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppSrvBindReq.Marshal(b, m, deterministic)
}
func (dst *AppSrvBindReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppSrvBindReq.Merge(dst, src)
}
func (m *AppSrvBindReq) XXX_Size() int {
	return xxx_messageInfo_AppSrvBindReq.Size(m)
}
func (m *AppSrvBindReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppSrvBindReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppSrvBindReq proto.InternalMessageInfo

func (m *AppSrvBindReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppSrvBindReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type ResourcesRes struct {
	Start                *Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	StepPerod            uint64     `protobuf:"varint,2,opt,name=stepPerod,proto3" json:"stepPerod,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Core                 []uint64   `protobuf:"varint,4,rep,packed,name=core,proto3" json:"core,omitempty"`
	Ram                  []uint64   `protobuf:"varint,5,rep,packed,name=ram,proto3" json:"ram,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ResourcesRes) Reset()         { *m = ResourcesRes{} }
func (m *ResourcesRes) String() string { return proto.CompactTextString(m) }
func (*ResourcesRes) ProtoMessage()    {}
func (*ResourcesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{47}
}
func (m *ResourcesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesRes.Unmarshal(m, b)
}
func (m *ResourcesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesRes.Marshal(b, m, deterministic)
}
func (dst *ResourcesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesRes.Merge(dst, src)
}
func (m *ResourcesRes) XXX_Size() int {
	return xxx_messageInfo_ResourcesRes.Size(m)
}
func (m *ResourcesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesRes proto.InternalMessageInfo

func (m *ResourcesRes) GetStart() *Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *ResourcesRes) GetStepPerod() uint64 {
	if m != nil {
		return m.StepPerod
	}
	return 0
}

func (m *ResourcesRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourcesRes) GetCore() []uint64 {
	if m != nil {
		return m.Core
	}
	return nil
}

func (m *ResourcesRes) GetRam() []uint64 {
	if m != nil {
		return m.Ram
	}
	return nil
}

type Hit struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Hit                  []uint64 `protobuf:"varint,2,rep,packed,name=hit,proto3" json:"hit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hit) Reset()         { *m = Hit{} }
func (m *Hit) String() string { return proto.CompactTextString(m) }
func (*Hit) ProtoMessage()    {}
func (*Hit) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{48}
}
func (m *Hit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hit.Unmarshal(m, b)
}
func (m *Hit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hit.Marshal(b, m, deterministic)
}
func (dst *Hit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hit.Merge(dst, src)
}
func (m *Hit) XXX_Size() int {
	return xxx_messageInfo_Hit.Size(m)
}
func (m *Hit) XXX_DiscardUnknown() {
	xxx_messageInfo_Hit.DiscardUnknown(m)
}

var xxx_messageInfo_Hit proto.InternalMessageInfo

func (m *Hit) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Hit) GetHit() []uint64 {
	if m != nil {
		return m.Hit
	}
	return nil
}

type TrafficRes struct {
	Start                *Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	StepPerod            uint64     `protobuf:"varint,2,opt,name=stepPerod,proto3" json:"stepPerod,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Hits                 []*Hit     `protobuf:"bytes,4,rep,name=hits,proto3" json:"hits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TrafficRes) Reset()         { *m = TrafficRes{} }
func (m *TrafficRes) String() string { return proto.CompactTextString(m) }
func (*TrafficRes) ProtoMessage()    {}
func (*TrafficRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{49}
}
func (m *TrafficRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrafficRes.Unmarshal(m, b)
}
func (m *TrafficRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrafficRes.Marshal(b, m, deterministic)
}
func (dst *TrafficRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrafficRes.Merge(dst, src)
}
func (m *TrafficRes) XXX_Size() int {
	return xxx_messageInfo_TrafficRes.Size(m)
}
func (m *TrafficRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TrafficRes.DiscardUnknown(m)
}

var xxx_messageInfo_TrafficRes proto.InternalMessageInfo

func (m *TrafficRes) GetStart() *Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *TrafficRes) GetStepPerod() uint64 {
	if m != nil {
		return m.StepPerod
	}
	return 0
}

func (m *TrafficRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrafficRes) GetHits() []*Hit {
	if m != nil {
		return m.Hits
	}
	return nil
}

type Latency struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Latency              []uint64 `protobuf:"varint,2,rep,packed,name=latency,proto3" json:"latency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Latency) Reset()         { *m = Latency{} }
func (m *Latency) String() string { return proto.CompactTextString(m) }
func (*Latency) ProtoMessage()    {}
func (*Latency) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{50}
}
func (m *Latency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Latency.Unmarshal(m, b)
}
func (m *Latency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Latency.Marshal(b, m, deterministic)
}
func (dst *Latency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Latency.Merge(dst, src)
}
func (m *Latency) XXX_Size() int {
	return xxx_messageInfo_Latency.Size(m)
}
func (m *Latency) XXX_DiscardUnknown() {
	xxx_messageInfo_Latency.DiscardUnknown(m)
}

var xxx_messageInfo_Latency proto.InternalMessageInfo

func (m *Latency) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Latency) GetLatency() []uint64 {
	if m != nil {
		return m.Latency
	}
	return nil
}

type LatencyRes struct {
	Start                *Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	StepPerod            uint64     `protobuf:"varint,2,opt,name=stepPerod,proto3" json:"stepPerod,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Latencies            []*Latency `protobuf:"bytes,4,rep,name=latencies,proto3" json:"latencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LatencyRes) Reset()         { *m = LatencyRes{} }
func (m *LatencyRes) String() string { return proto.CompactTextString(m) }
func (*LatencyRes) ProtoMessage()    {}
func (*LatencyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{51}
}
func (m *LatencyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatencyRes.Unmarshal(m, b)
}
func (m *LatencyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatencyRes.Marshal(b, m, deterministic)
}
func (dst *LatencyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatencyRes.Merge(dst, src)
}
func (m *LatencyRes) XXX_Size() int {
	return xxx_messageInfo_LatencyRes.Size(m)
}
func (m *LatencyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LatencyRes.DiscardUnknown(m)
}

var xxx_messageInfo_LatencyRes proto.InternalMessageInfo

func (m *LatencyRes) GetStart() *Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *LatencyRes) GetStepPerod() uint64 {
	if m != nil {
		return m.StepPerod
	}
	return 0
}

func (m *LatencyRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LatencyRes) GetLatencies() []*Latency {
	if m != nil {
		return m.Latencies
	}
	return nil
}

type Activity struct {
	Time                 *Timestamp  `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Tag                  ActivityTag `protobuf:"varint,2,opt,name=tag,proto3,enum=yb.ActivityTag" json:"tag,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Attachment           string      `protobuf:"bytes,4,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Type                 string      `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Email                string      `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Description          string      `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Activity) Reset()         { *m = Activity{} }
func (m *Activity) String() string { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()    {}
func (*Activity) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{52}
}
func (m *Activity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Activity.Unmarshal(m, b)
}
func (m *Activity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Activity.Marshal(b, m, deterministic)
}
func (dst *Activity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity.Merge(dst, src)
}
func (m *Activity) XXX_Size() int {
	return xxx_messageInfo_Activity.Size(m)
}
func (m *Activity) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity.DiscardUnknown(m)
}

var xxx_messageInfo_Activity proto.InternalMessageInfo

func (m *Activity) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Activity) GetTag() ActivityTag {
	if m != nil {
		return m.Tag
	}
	return ActivityTag_None
}

func (m *Activity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Activity) GetAttachment() string {
	if m != nil {
		return m.Attachment
	}
	return ""
}

func (m *Activity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Activity) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Activity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ActivityReq struct {
	Index                int32       `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Tag                  ActivityTag `protobuf:"varint,2,opt,name=tag,proto3,enum=yb.ActivityTag" json:"tag,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ActivityReq) Reset()         { *m = ActivityReq{} }
func (m *ActivityReq) String() string { return proto.CompactTextString(m) }
func (*ActivityReq) ProtoMessage()    {}
func (*ActivityReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{53}
}
func (m *ActivityReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityReq.Unmarshal(m, b)
}
func (m *ActivityReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityReq.Marshal(b, m, deterministic)
}
func (dst *ActivityReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityReq.Merge(dst, src)
}
func (m *ActivityReq) XXX_Size() int {
	return xxx_messageInfo_ActivityReq.Size(m)
}
func (m *ActivityReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityReq proto.InternalMessageInfo

func (m *ActivityReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ActivityReq) GetTag() ActivityTag {
	if m != nil {
		return m.Tag
	}
	return ActivityTag_None
}

func (m *ActivityReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ActivityListRes struct {
	Index                int32       `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Activities           []*Activity `protobuf:"bytes,2,rep,name=activities,proto3" json:"activities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ActivityListRes) Reset()         { *m = ActivityListRes{} }
func (m *ActivityListRes) String() string { return proto.CompactTextString(m) }
func (*ActivityListRes) ProtoMessage()    {}
func (*ActivityListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_YB_44005d4f001a4704, []int{54}
}
func (m *ActivityListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityListRes.Unmarshal(m, b)
}
func (m *ActivityListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityListRes.Marshal(b, m, deterministic)
}
func (dst *ActivityListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityListRes.Merge(dst, src)
}
func (m *ActivityListRes) XXX_Size() int {
	return xxx_messageInfo_ActivityListRes.Size(m)
}
func (m *ActivityListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityListRes.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityListRes proto.InternalMessageInfo

func (m *ActivityListRes) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ActivityListRes) GetActivities() []*Activity {
	if m != nil {
		return m.Activities
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginReq)(nil), "yb.LoginReq")
	proto.RegisterType((*AuthenticationRes)(nil), "yb.AuthenticationRes")
	proto.RegisterType((*Account)(nil), "yb.Account")
	proto.RegisterMapType((map[string]*GeneralVariable)(nil), "yb.Account.VariablesEntry")
	proto.RegisterType((*Empty)(nil), "yb.Empty")
	proto.RegisterType((*Identity)(nil), "yb.Identity")
	proto.RegisterType((*Timestamp)(nil), "yb.Timestamp")
	proto.RegisterType((*GeneralVariable)(nil), "yb.GeneralVariable")
	proto.RegisterType((*AttachIdentity)(nil), "yb.AttachIdentity")
	proto.RegisterType((*AppListReq)(nil), "yb.AppListReq")
	proto.RegisterType((*ListReq)(nil), "yb.ListReq")
	proto.RegisterType((*ListStatusRes)(nil), "yb.ListStatusRes")
	proto.RegisterType((*Chunk)(nil), "yb.Chunk")
	proto.RegisterType((*PortforwardRes)(nil), "yb.PortforwardRes")
	proto.RegisterType((*DomainCreateReq)(nil), "yb.DomainCreateReq")
	proto.RegisterType((*DomainStatusRes)(nil), "yb.DomainStatusRes")
	proto.RegisterMapType((map[string]string)(nil), "yb.DomainStatusRes.AttachedToEntry")
	proto.RegisterType((*DomainListRes)(nil), "yb.DomainListRes")
	proto.RegisterType((*AttachedDomainInfo)(nil), "yb.AttachedDomainInfo")
	proto.RegisterType((*VolumeCreateReq)(nil), "yb.VolumeCreateReq")
	proto.RegisterType((*VolumeMount)(nil), "yb.VolumeMount")
	proto.RegisterType((*VolumeSpec)(nil), "yb.VolumeSpec")
	proto.RegisterType((*VolumeSpecListRes)(nil), "yb.VolumeSpecListRes")
	proto.RegisterType((*VolumeStatusRes)(nil), "yb.VolumeStatusRes")
	proto.RegisterType((*VolumeListRes)(nil), "yb.VolumeListRes")
	proto.RegisterType((*ImgStatusRes)(nil), "yb.ImgStatusRes")
	proto.RegisterType((*ImgListRes)(nil), "yb.ImgListRes")
	proto.RegisterType((*ImgBuildReq)(nil), "yb.ImgBuildReq")
	proto.RegisterType((*ServiceCondition)(nil), "yb.ServiceCondition")
	proto.RegisterType((*ProductRes)(nil), "yb.ProductRes")
	proto.RegisterMapType((map[string]*GeneralVariable)(nil), "yb.ProductRes.VariablesEntry")
	proto.RegisterType((*ProductListRow)(nil), "yb.ProductListRow")
	proto.RegisterType((*PrdListRes)(nil), "yb.PrdListRes")
	proto.RegisterType((*SrvConfigSetReq)(nil), "yb.SrvConfigSetReq")
	proto.RegisterMapType((map[string]string)(nil), "yb.SrvConfigSetReq.ValuesEntry")
	proto.RegisterType((*Plan)(nil), "yb.Plan")
	proto.RegisterMapType((map[string]string)(nil), "yb.Plan.ExtrasEntry")
	proto.RegisterType((*SrvStatusRes)(nil), "yb.SrvStatusRes")
	proto.RegisterMapType((map[string]*GeneralVariable)(nil), "yb.SrvStatusRes.VariablesEntry")
	proto.RegisterType((*PunchedCard)(nil), "yb.PunchedCard")
	proto.RegisterMapType((map[string]string)(nil), "yb.PunchedCard.ValuesEntry")
	proto.RegisterType((*ServiceRes)(nil), "yb.ServiceRes")
	proto.RegisterType((*SrvListRes)(nil), "yb.SrvListRes")
	proto.RegisterType((*SrvDomainAttachReq)(nil), "yb.SrvDomainAttachReq")
	proto.RegisterType((*SrvCreateReq)(nil), "yb.SrvCreateReq")
	proto.RegisterMapType((map[string]string)(nil), "yb.SrvCreateReq.ValuesEntry")
	proto.RegisterType((*AppStatusRes)(nil), "yb.AppStatusRes")
	proto.RegisterMapType((map[string]string)(nil), "yb.AppStatusRes.EnvironmentVariablesEntry")
	proto.RegisterMapType((map[string]*GeneralVariable)(nil), "yb.AppStatusRes.VariablesEntry")
	proto.RegisterType((*Instance)(nil), "yb.Instance")
	proto.RegisterType((*AppCreateReq)(nil), "yb.AppCreateReq")
	proto.RegisterMapType((map[string]string)(nil), "yb.AppCreateReq.ValuesEntry")
	proto.RegisterType((*TailRequest)(nil), "yb.TailRequest")
	proto.RegisterType((*ShellReq)(nil), "yb.ShellReq")
	proto.RegisterType((*UnsetReq)(nil), "yb.UnsetReq")
	proto.RegisterType((*ChangePlanReq)(nil), "yb.ChangePlanReq")
	proto.RegisterType((*AppAddEnvironmentVariableReq)(nil), "yb.AppAddEnvironmentVariableReq")
	proto.RegisterMapType((map[string]string)(nil), "yb.AppAddEnvironmentVariableReq.VariablesEntry")
	proto.RegisterType((*AppSrvBindReq)(nil), "yb.AppSrvBindReq")
	proto.RegisterType((*ResourcesRes)(nil), "yb.ResourcesRes")
	proto.RegisterType((*Hit)(nil), "yb.Hit")
	proto.RegisterType((*TrafficRes)(nil), "yb.TrafficRes")
	proto.RegisterType((*Latency)(nil), "yb.Latency")
	proto.RegisterType((*LatencyRes)(nil), "yb.LatencyRes")
	proto.RegisterType((*Activity)(nil), "yb.Activity")
	proto.RegisterType((*ActivityReq)(nil), "yb.ActivityReq")
	proto.RegisterType((*ActivityListRes)(nil), "yb.ActivityListRes")
	proto.RegisterEnum("yb.ActivityTag", ActivityTag_name, ActivityTag_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YBClient is the client API for YB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YBClient interface {
	// Authentication
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*AuthenticationRes, error)
	Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	AccountInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Account, error)
	AccountUpdate(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error)
	// Monitoring
	MonitoringQuota(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ResourcesRes, error)
	MonitoringResource(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ResourcesRes, error)
	MonitoringTraffic(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*TrafficRes, error)
	MonitoringLatency(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*LatencyRes, error)
	ActivityList(ctx context.Context, in *ActivityReq, opts ...grpc.CallOption) (*ActivityListRes, error)
	// Domain
	DomainList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*DomainListRes, error)
	DomainInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*DomainStatusRes, error)
	DomainToggleTLS(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*DomainStatusRes, error)
	DomainCreate(ctx context.Context, in *DomainCreateReq, opts ...grpc.CallOption) (*DomainStatusRes, error)
	DomainDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	// Volume
	VolumeSpecList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*VolumeSpecListRes, error)
	VolumeList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*VolumeListRes, error)
	VolumeInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*VolumeStatusRes, error)
	VolumeCreate(ctx context.Context, in *VolumeCreateReq, opts ...grpc.CallOption) (*VolumeStatusRes, error)
	VolumeDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	VolumeFTPPortforward(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*PortforwardRes, error)
	// Image
	ImgList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*ImgListRes, error)
	ImgInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ImgStatusRes, error)
	ImgDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	ImgBuild(ctx context.Context, in *ImgBuildReq, opts ...grpc.CallOption) (*Empty, error)
	ImgBuildLog(ctx context.Context, in *Identity, opts ...grpc.CallOption) (YB_ImgBuildLogClient, error)
	ImgBuildLogTail(ctx context.Context, in *TailRequest, opts ...grpc.CallOption) (*Chunk, error)
	// Product
	PrdList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*PrdListRes, error)
	PrdInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ProductRes, error)
	// Service
	SrvList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*SrvListRes, error)
	SrvInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvCreate(ctx context.Context, in *SrvCreateReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	SrvChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvAttachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvDetachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvOperator(ctx context.Context, in *PunchedCard, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvPortforward(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*PortforwardRes, error)
	// Added in v2.1 patch
	SrvConfigSet(ctx context.Context, in *SrvConfigSetReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvConfigUnset(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	// Application
	AppList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*SrvListRes, error)
	AppInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppCreate(ctx context.Context, in *AppCreateReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	AppChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppLog(ctx context.Context, in *Identity, opts ...grpc.CallOption) (YB_AppLogClient, error)
	AppLogTail(ctx context.Context, in *TailRequest, opts ...grpc.CallOption) (*Chunk, error)
	AppConfigSet(ctx context.Context, in *SrvConfigSetReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppConfigUnset(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppAddEnvironmentVariable(ctx context.Context, in *AppAddEnvironmentVariableReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppRemoveEnvironmentVariable(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppReset(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	// TTY disable for now
	AppShell(ctx context.Context, in *ShellReq, opts ...grpc.CallOption) (*Chunk, error)
	AppAttachVolume(ctx context.Context, in *VolumeMount, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppDetachVolume(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppAttachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppDetachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppSrvBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppSrvUnBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error)
}

type yBClient struct {
	cc *grpc.ClientConn
}

func NewYBClient(cc *grpc.ClientConn) YBClient {
	return &yBClient{cc}
}

func (c *yBClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*AuthenticationRes, error) {
	out := new(AuthenticationRes)
	err := c.cc.Invoke(ctx, "/yb.YB/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/yb.YB/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AccountInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/yb.YB/AccountInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AccountUpdate(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/yb.YB/AccountUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) MonitoringQuota(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ResourcesRes, error) {
	out := new(ResourcesRes)
	err := c.cc.Invoke(ctx, "/yb.YB/MonitoringQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) MonitoringResource(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ResourcesRes, error) {
	out := new(ResourcesRes)
	err := c.cc.Invoke(ctx, "/yb.YB/MonitoringResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) MonitoringTraffic(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*TrafficRes, error) {
	out := new(TrafficRes)
	err := c.cc.Invoke(ctx, "/yb.YB/MonitoringTraffic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) MonitoringLatency(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*LatencyRes, error) {
	out := new(LatencyRes)
	err := c.cc.Invoke(ctx, "/yb.YB/MonitoringLatency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) ActivityList(ctx context.Context, in *ActivityReq, opts ...grpc.CallOption) (*ActivityListRes, error) {
	out := new(ActivityListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/ActivityList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) DomainList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*DomainListRes, error) {
	out := new(DomainListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/DomainList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) DomainInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*DomainStatusRes, error) {
	out := new(DomainStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/DomainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) DomainToggleTLS(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*DomainStatusRes, error) {
	out := new(DomainStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/DomainToggleTLS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) DomainCreate(ctx context.Context, in *DomainCreateReq, opts ...grpc.CallOption) (*DomainStatusRes, error) {
	out := new(DomainStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/DomainCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) DomainDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/yb.YB/DomainDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) VolumeSpecList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*VolumeSpecListRes, error) {
	out := new(VolumeSpecListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/VolumeSpecList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) VolumeList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*VolumeListRes, error) {
	out := new(VolumeListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/VolumeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) VolumeInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*VolumeStatusRes, error) {
	out := new(VolumeStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/VolumeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) VolumeCreate(ctx context.Context, in *VolumeCreateReq, opts ...grpc.CallOption) (*VolumeStatusRes, error) {
	out := new(VolumeStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/VolumeCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) VolumeDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/yb.YB/VolumeDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) VolumeFTPPortforward(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*PortforwardRes, error) {
	out := new(PortforwardRes)
	err := c.cc.Invoke(ctx, "/yb.YB/VolumeFTPPortforward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) ImgList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*ImgListRes, error) {
	out := new(ImgListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/ImgList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) ImgInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ImgStatusRes, error) {
	out := new(ImgStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/ImgInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) ImgDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/yb.YB/ImgDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) ImgBuild(ctx context.Context, in *ImgBuildReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/yb.YB/ImgBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) ImgBuildLog(ctx context.Context, in *Identity, opts ...grpc.CallOption) (YB_ImgBuildLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_YB_serviceDesc.Streams[0], "/yb.YB/ImgBuildLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &yBImgBuildLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type YB_ImgBuildLogClient interface {
	Recv() (*Chunk, error)
	grpc.ClientStream
}

type yBImgBuildLogClient struct {
	grpc.ClientStream
}

func (x *yBImgBuildLogClient) Recv() (*Chunk, error) {
	m := new(Chunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *yBClient) ImgBuildLogTail(ctx context.Context, in *TailRequest, opts ...grpc.CallOption) (*Chunk, error) {
	out := new(Chunk)
	err := c.cc.Invoke(ctx, "/yb.YB/ImgBuildLogTail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) PrdList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*PrdListRes, error) {
	out := new(PrdListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/PrdList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) PrdInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ProductRes, error) {
	out := new(ProductRes)
	err := c.cc.Invoke(ctx, "/yb.YB/PrdInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvList(ctx context.Context, in *AppListReq, opts ...grpc.CallOption) (*SrvListRes, error) {
	out := new(SrvListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvCreate(ctx context.Context, in *SrvCreateReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvDestroy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvChangePlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvAttachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvAttachDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvDetachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvDetachDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvOperator(ctx context.Context, in *PunchedCard, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvOperator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvPortforward(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*PortforwardRes, error) {
	out := new(PortforwardRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvPortforward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvConfigSet(ctx context.Context, in *SrvConfigSetReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvConfigSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) SrvConfigUnset(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/SrvConfigUnset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*SrvListRes, error) {
	out := new(SrvListRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppCreate(ctx context.Context, in *AppCreateReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/yb.YB/AppDestroy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppChangePlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppLog(ctx context.Context, in *Identity, opts ...grpc.CallOption) (YB_AppLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_YB_serviceDesc.Streams[1], "/yb.YB/AppLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &yBAppLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type YB_AppLogClient interface {
	Recv() (*Chunk, error)
	grpc.ClientStream
}

type yBAppLogClient struct {
	grpc.ClientStream
}

func (x *yBAppLogClient) Recv() (*Chunk, error) {
	m := new(Chunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *yBClient) AppLogTail(ctx context.Context, in *TailRequest, opts ...grpc.CallOption) (*Chunk, error) {
	out := new(Chunk)
	err := c.cc.Invoke(ctx, "/yb.YB/AppLogTail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppConfigSet(ctx context.Context, in *SrvConfigSetReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppConfigSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppConfigUnset(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppConfigUnset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppAddEnvironmentVariable(ctx context.Context, in *AppAddEnvironmentVariableReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppAddEnvironmentVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppRemoveEnvironmentVariable(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppRemoveEnvironmentVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppReset(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppShell(ctx context.Context, in *ShellReq, opts ...grpc.CallOption) (*Chunk, error) {
	out := new(Chunk)
	err := c.cc.Invoke(ctx, "/yb.YB/AppShell", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppAttachVolume(ctx context.Context, in *VolumeMount, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppAttachVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppDetachVolume(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppDetachVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppAttachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppAttachDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppDetachDomain(ctx context.Context, in *SrvDomainAttachReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppDetachDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppSrvBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppSrvBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yBClient) AppSrvUnBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := c.cc.Invoke(ctx, "/yb.YB/AppSrvUnBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YBServer is the server API for YB service.
type YBServer interface {
	// Authentication
	Login(context.Context, *LoginReq) (*AuthenticationRes, error)
	Logout(context.Context, *Empty) (*Empty, error)
	AccountInfo(context.Context, *Empty) (*Account, error)
	AccountUpdate(context.Context, *Account) (*Account, error)
	// Monitoring
	MonitoringQuota(context.Context, *Empty) (*ResourcesRes, error)
	MonitoringResource(context.Context, *Identity) (*ResourcesRes, error)
	MonitoringTraffic(context.Context, *Identity) (*TrafficRes, error)
	MonitoringLatency(context.Context, *Identity) (*LatencyRes, error)
	ActivityList(context.Context, *ActivityReq) (*ActivityListRes, error)
	// Domain
	DomainList(context.Context, *AppListReq) (*DomainListRes, error)
	DomainInfo(context.Context, *Identity) (*DomainStatusRes, error)
	DomainToggleTLS(context.Context, *Identity) (*DomainStatusRes, error)
	DomainCreate(context.Context, *DomainCreateReq) (*DomainStatusRes, error)
	DomainDelete(context.Context, *Identity) (*Empty, error)
	// Volume
	VolumeSpecList(context.Context, *ListReq) (*VolumeSpecListRes, error)
	VolumeList(context.Context, *AppListReq) (*VolumeListRes, error)
	VolumeInfo(context.Context, *Identity) (*VolumeStatusRes, error)
	VolumeCreate(context.Context, *VolumeCreateReq) (*VolumeStatusRes, error)
	VolumeDelete(context.Context, *Identity) (*Empty, error)
	VolumeFTPPortforward(context.Context, *Identity) (*PortforwardRes, error)
	// Image
	ImgList(context.Context, *AppListReq) (*ImgListRes, error)
	ImgInfo(context.Context, *Identity) (*ImgStatusRes, error)
	ImgDelete(context.Context, *Identity) (*Empty, error)
	ImgBuild(context.Context, *ImgBuildReq) (*Empty, error)
	ImgBuildLog(*Identity, YB_ImgBuildLogServer) error
	ImgBuildLogTail(context.Context, *TailRequest) (*Chunk, error)
	// Product
	PrdList(context.Context, *ListReq) (*PrdListRes, error)
	PrdInfo(context.Context, *Identity) (*ProductRes, error)
	// Service
	SrvList(context.Context, *AppListReq) (*SrvListRes, error)
	SrvInfo(context.Context, *Identity) (*SrvStatusRes, error)
	SrvCreate(context.Context, *SrvCreateReq) (*SrvStatusRes, error)
	SrvDestroy(context.Context, *Identity) (*Empty, error)
	SrvChangePlan(context.Context, *ChangePlanReq) (*SrvStatusRes, error)
	SrvStart(context.Context, *Identity) (*SrvStatusRes, error)
	SrvStop(context.Context, *Identity) (*SrvStatusRes, error)
	SrvAttachDomain(context.Context, *SrvDomainAttachReq) (*SrvStatusRes, error)
	SrvDetachDomain(context.Context, *SrvDomainAttachReq) (*SrvStatusRes, error)
	SrvOperator(context.Context, *PunchedCard) (*SrvStatusRes, error)
	SrvPortforward(context.Context, *Identity) (*PortforwardRes, error)
	// Added in v2.1 patch
	SrvConfigSet(context.Context, *SrvConfigSetReq) (*SrvStatusRes, error)
	SrvConfigUnset(context.Context, *UnsetReq) (*SrvStatusRes, error)
	// Application
	AppList(context.Context, *ListReq) (*SrvListRes, error)
	AppInfo(context.Context, *Identity) (*AppStatusRes, error)
	AppCreate(context.Context, *AppCreateReq) (*AppStatusRes, error)
	AppDestroy(context.Context, *Identity) (*Empty, error)
	AppChangePlan(context.Context, *ChangePlanReq) (*AppStatusRes, error)
	AppLog(*Identity, YB_AppLogServer) error
	AppLogTail(context.Context, *TailRequest) (*Chunk, error)
	AppConfigSet(context.Context, *SrvConfigSetReq) (*AppStatusRes, error)
	AppConfigUnset(context.Context, *UnsetReq) (*AppStatusRes, error)
	AppAddEnvironmentVariable(context.Context, *AppAddEnvironmentVariableReq) (*AppStatusRes, error)
	AppRemoveEnvironmentVariable(context.Context, *UnsetReq) (*AppStatusRes, error)
	AppReset(context.Context, *Identity) (*AppStatusRes, error)
	AppStop(context.Context, *Identity) (*AppStatusRes, error)
	AppStart(context.Context, *Identity) (*AppStatusRes, error)
	// TTY disable for now
	AppShell(context.Context, *ShellReq) (*Chunk, error)
	AppAttachVolume(context.Context, *VolumeMount) (*AppStatusRes, error)
	AppDetachVolume(context.Context, *AttachIdentity) (*AppStatusRes, error)
	AppAttachDomain(context.Context, *SrvDomainAttachReq) (*AppStatusRes, error)
	AppDetachDomain(context.Context, *SrvDomainAttachReq) (*AppStatusRes, error)
	AppSrvBind(context.Context, *AppSrvBindReq) (*AppStatusRes, error)
	AppSrvUnBind(context.Context, *AppSrvBindReq) (*AppStatusRes, error)
}

func RegisterYBServer(s *grpc.Server, srv YBServer) {
	s.RegisterService(&_YB_serviceDesc, srv)
}

func _YB_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).Logout(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AccountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AccountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AccountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AccountInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AccountUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AccountUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AccountUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AccountUpdate(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_MonitoringQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).MonitoringQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/MonitoringQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).MonitoringQuota(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_MonitoringResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).MonitoringResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/MonitoringResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).MonitoringResource(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_MonitoringTraffic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).MonitoringTraffic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/MonitoringTraffic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).MonitoringTraffic(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_MonitoringLatency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).MonitoringLatency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/MonitoringLatency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).MonitoringLatency(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_ActivityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).ActivityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/ActivityList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).ActivityList(ctx, req.(*ActivityReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_DomainList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).DomainList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/DomainList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).DomainList(ctx, req.(*AppListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_DomainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).DomainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/DomainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).DomainInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_DomainToggleTLS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).DomainToggleTLS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/DomainToggleTLS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).DomainToggleTLS(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_DomainCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).DomainCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/DomainCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).DomainCreate(ctx, req.(*DomainCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_DomainDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).DomainDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/DomainDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).DomainDelete(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_VolumeSpecList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).VolumeSpecList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/VolumeSpecList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).VolumeSpecList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_VolumeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).VolumeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/VolumeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).VolumeList(ctx, req.(*AppListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_VolumeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).VolumeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/VolumeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).VolumeInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_VolumeCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).VolumeCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/VolumeCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).VolumeCreate(ctx, req.(*VolumeCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_VolumeDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).VolumeDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/VolumeDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).VolumeDelete(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_VolumeFTPPortforward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).VolumeFTPPortforward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/VolumeFTPPortforward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).VolumeFTPPortforward(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_ImgList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).ImgList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/ImgList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).ImgList(ctx, req.(*AppListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_ImgInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).ImgInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/ImgInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).ImgInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_ImgDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).ImgDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/ImgDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).ImgDelete(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_ImgBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImgBuildReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).ImgBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/ImgBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).ImgBuild(ctx, req.(*ImgBuildReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_ImgBuildLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Identity)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(YBServer).ImgBuildLog(m, &yBImgBuildLogServer{stream})
}

type YB_ImgBuildLogServer interface {
	Send(*Chunk) error
	grpc.ServerStream
}

type yBImgBuildLogServer struct {
	grpc.ServerStream
}

func (x *yBImgBuildLogServer) Send(m *Chunk) error {
	return x.ServerStream.SendMsg(m)
}

func _YB_ImgBuildLogTail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).ImgBuildLogTail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/ImgBuildLogTail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).ImgBuildLogTail(ctx, req.(*TailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_PrdList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).PrdList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/PrdList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).PrdList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_PrdInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).PrdInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/PrdInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).PrdInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvList(ctx, req.(*AppListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvCreate(ctx, req.(*SrvCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvDestroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvDestroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvDestroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvDestroy(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvChangePlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvChangePlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvChangePlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvChangePlan(ctx, req.(*ChangePlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvStart(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvStop(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvAttachDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvDomainAttachReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvAttachDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvAttachDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvAttachDomain(ctx, req.(*SrvDomainAttachReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvDetachDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvDomainAttachReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvDetachDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvDetachDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvDetachDomain(ctx, req.(*SrvDomainAttachReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvOperator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PunchedCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvOperator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvOperator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvOperator(ctx, req.(*PunchedCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvPortforward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvPortforward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvPortforward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvPortforward(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvConfigSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvConfigSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvConfigSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvConfigSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvConfigSet(ctx, req.(*SrvConfigSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_SrvConfigUnset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).SrvConfigUnset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/SrvConfigUnset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).SrvConfigUnset(ctx, req.(*UnsetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppCreate(ctx, req.(*AppCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppDestroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppDestroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppDestroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppDestroy(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppChangePlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppChangePlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppChangePlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppChangePlan(ctx, req.(*ChangePlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Identity)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(YBServer).AppLog(m, &yBAppLogServer{stream})
}

type YB_AppLogServer interface {
	Send(*Chunk) error
	grpc.ServerStream
}

type yBAppLogServer struct {
	grpc.ServerStream
}

func (x *yBAppLogServer) Send(m *Chunk) error {
	return x.ServerStream.SendMsg(m)
}

func _YB_AppLogTail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppLogTail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppLogTail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppLogTail(ctx, req.(*TailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppConfigSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvConfigSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppConfigSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppConfigSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppConfigSet(ctx, req.(*SrvConfigSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppConfigUnset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppConfigUnset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppConfigUnset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppConfigUnset(ctx, req.(*UnsetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppAddEnvironmentVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppAddEnvironmentVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppAddEnvironmentVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppAddEnvironmentVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppAddEnvironmentVariable(ctx, req.(*AppAddEnvironmentVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppRemoveEnvironmentVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppRemoveEnvironmentVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppRemoveEnvironmentVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppRemoveEnvironmentVariable(ctx, req.(*UnsetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppReset(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppStop(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppStart(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppShell_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShellReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppShell(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppShell",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppShell(ctx, req.(*ShellReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppAttachVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeMount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppAttachVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppAttachVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppAttachVolume(ctx, req.(*VolumeMount))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppDetachVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppDetachVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppDetachVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppDetachVolume(ctx, req.(*AttachIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppAttachDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvDomainAttachReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppAttachDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppAttachDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppAttachDomain(ctx, req.(*SrvDomainAttachReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppDetachDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvDomainAttachReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppDetachDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppDetachDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppDetachDomain(ctx, req.(*SrvDomainAttachReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppSrvBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppSrvBindReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppSrvBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppSrvBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppSrvBind(ctx, req.(*AppSrvBindReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _YB_AppSrvUnBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppSrvBindReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YBServer).AppSrvUnBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yb.YB/AppSrvUnBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YBServer).AppSrvUnBind(ctx, req.(*AppSrvBindReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _YB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yb.YB",
	HandlerType: (*YBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _YB_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _YB_Logout_Handler,
		},
		{
			MethodName: "AccountInfo",
			Handler:    _YB_AccountInfo_Handler,
		},
		{
			MethodName: "AccountUpdate",
			Handler:    _YB_AccountUpdate_Handler,
		},
		{
			MethodName: "MonitoringQuota",
			Handler:    _YB_MonitoringQuota_Handler,
		},
		{
			MethodName: "MonitoringResource",
			Handler:    _YB_MonitoringResource_Handler,
		},
		{
			MethodName: "MonitoringTraffic",
			Handler:    _YB_MonitoringTraffic_Handler,
		},
		{
			MethodName: "MonitoringLatency",
			Handler:    _YB_MonitoringLatency_Handler,
		},
		{
			MethodName: "ActivityList",
			Handler:    _YB_ActivityList_Handler,
		},
		{
			MethodName: "DomainList",
			Handler:    _YB_DomainList_Handler,
		},
		{
			MethodName: "DomainInfo",
			Handler:    _YB_DomainInfo_Handler,
		},
		{
			MethodName: "DomainToggleTLS",
			Handler:    _YB_DomainToggleTLS_Handler,
		},
		{
			MethodName: "DomainCreate",
			Handler:    _YB_DomainCreate_Handler,
		},
		{
			MethodName: "DomainDelete",
			Handler:    _YB_DomainDelete_Handler,
		},
		{
			MethodName: "VolumeSpecList",
			Handler:    _YB_VolumeSpecList_Handler,
		},
		{
			MethodName: "VolumeList",
			Handler:    _YB_VolumeList_Handler,
		},
		{
			MethodName: "VolumeInfo",
			Handler:    _YB_VolumeInfo_Handler,
		},
		{
			MethodName: "VolumeCreate",
			Handler:    _YB_VolumeCreate_Handler,
		},
		{
			MethodName: "VolumeDelete",
			Handler:    _YB_VolumeDelete_Handler,
		},
		{
			MethodName: "VolumeFTPPortforward",
			Handler:    _YB_VolumeFTPPortforward_Handler,
		},
		{
			MethodName: "ImgList",
			Handler:    _YB_ImgList_Handler,
		},
		{
			MethodName: "ImgInfo",
			Handler:    _YB_ImgInfo_Handler,
		},
		{
			MethodName: "ImgDelete",
			Handler:    _YB_ImgDelete_Handler,
		},
		{
			MethodName: "ImgBuild",
			Handler:    _YB_ImgBuild_Handler,
		},
		{
			MethodName: "ImgBuildLogTail",
			Handler:    _YB_ImgBuildLogTail_Handler,
		},
		{
			MethodName: "PrdList",
			Handler:    _YB_PrdList_Handler,
		},
		{
			MethodName: "PrdInfo",
			Handler:    _YB_PrdInfo_Handler,
		},
		{
			MethodName: "SrvList",
			Handler:    _YB_SrvList_Handler,
		},
		{
			MethodName: "SrvInfo",
			Handler:    _YB_SrvInfo_Handler,
		},
		{
			MethodName: "SrvCreate",
			Handler:    _YB_SrvCreate_Handler,
		},
		{
			MethodName: "SrvDestroy",
			Handler:    _YB_SrvDestroy_Handler,
		},
		{
			MethodName: "SrvChangePlan",
			Handler:    _YB_SrvChangePlan_Handler,
		},
		{
			MethodName: "SrvStart",
			Handler:    _YB_SrvStart_Handler,
		},
		{
			MethodName: "SrvStop",
			Handler:    _YB_SrvStop_Handler,
		},
		{
			MethodName: "SrvAttachDomain",
			Handler:    _YB_SrvAttachDomain_Handler,
		},
		{
			MethodName: "SrvDetachDomain",
			Handler:    _YB_SrvDetachDomain_Handler,
		},
		{
			MethodName: "SrvOperator",
			Handler:    _YB_SrvOperator_Handler,
		},
		{
			MethodName: "SrvPortforward",
			Handler:    _YB_SrvPortforward_Handler,
		},
		{
			MethodName: "SrvConfigSet",
			Handler:    _YB_SrvConfigSet_Handler,
		},
		{
			MethodName: "SrvConfigUnset",
			Handler:    _YB_SrvConfigUnset_Handler,
		},
		{
			MethodName: "AppList",
			Handler:    _YB_AppList_Handler,
		},
		{
			MethodName: "AppInfo",
			Handler:    _YB_AppInfo_Handler,
		},
		{
			MethodName: "AppCreate",
			Handler:    _YB_AppCreate_Handler,
		},
		{
			MethodName: "AppDestroy",
			Handler:    _YB_AppDestroy_Handler,
		},
		{
			MethodName: "AppChangePlan",
			Handler:    _YB_AppChangePlan_Handler,
		},
		{
			MethodName: "AppLogTail",
			Handler:    _YB_AppLogTail_Handler,
		},
		{
			MethodName: "AppConfigSet",
			Handler:    _YB_AppConfigSet_Handler,
		},
		{
			MethodName: "AppConfigUnset",
			Handler:    _YB_AppConfigUnset_Handler,
		},
		{
			MethodName: "AppAddEnvironmentVariable",
			Handler:    _YB_AppAddEnvironmentVariable_Handler,
		},
		{
			MethodName: "AppRemoveEnvironmentVariable",
			Handler:    _YB_AppRemoveEnvironmentVariable_Handler,
		},
		{
			MethodName: "AppReset",
			Handler:    _YB_AppReset_Handler,
		},
		{
			MethodName: "AppStop",
			Handler:    _YB_AppStop_Handler,
		},
		{
			MethodName: "AppStart",
			Handler:    _YB_AppStart_Handler,
		},
		{
			MethodName: "AppShell",
			Handler:    _YB_AppShell_Handler,
		},
		{
			MethodName: "AppAttachVolume",
			Handler:    _YB_AppAttachVolume_Handler,
		},
		{
			MethodName: "AppDetachVolume",
			Handler:    _YB_AppDetachVolume_Handler,
		},
		{
			MethodName: "AppAttachDomain",
			Handler:    _YB_AppAttachDomain_Handler,
		},
		{
			MethodName: "AppDetachDomain",
			Handler:    _YB_AppDetachDomain_Handler,
		},
		{
			MethodName: "AppSrvBind",
			Handler:    _YB_AppSrvBind_Handler,
		},
		{
			MethodName: "AppSrvUnBind",
			Handler:    _YB_AppSrvUnBind_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ImgBuildLog",
			Handler:       _YB_ImgBuildLog_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AppLog",
			Handler:       _YB_AppLog_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "YB.proto",
}

func init() { proto.RegisterFile("YB.proto", fileDescriptor_YB_44005d4f001a4704) }

var fileDescriptor_YB_44005d4f001a4704 = []byte{
	// 3459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5a, 0x4b, 0x6f, 0x1c, 0x49,
	0x72, 0x56, 0x93, 0xdd, 0xec, 0xee, 0x68, 0x3e, 0x9a, 0xa9, 0xc7, 0xb4, 0x28, 0x4a, 0xa2, 0x52,
	0x8f, 0x19, 0x71, 0x46, 0xa2, 0xc0, 0x11, 0x20, 0x8d, 0xa4, 0x19, 0x83, 0xa2, 0x5e, 0x9c, 0xd1,
	0x83, 0x53, 0x4d, 0x09, 0x1e, 0x0b, 0x30, 0x5d, 0xac, 0x4e, 0x36, 0xcb, 0xea, 0xae, 0x2a, 0x55,
	0x55, 0xb7, 0x44, 0x1b, 0x06, 0x6c, 0x9f, 0x06, 0x30, 0xe0, 0x8b, 0x4f, 0xfe, 0x05, 0x3e, 0xf8,
	0x0f, 0xd8, 0xf0, 0xc1, 0x17, 0x5f, 0x7c, 0x58, 0x60, 0x81, 0xdd, 0x3f, 0xb0, 0xc0, 0xde, 0x77,
	0x7f, 0xc2, 0x22, 0x22, 0x33, 0xab, 0xb2, 0x8a, 0xd5, 0x7c, 0x08, 0x23, 0xed, 0x2d, 0x33, 0x2b,
	0xe3, 0x8b, 0xc8, 0xc8, 0x88, 0xc8, 0xc8, 0x8c, 0x82, 0xda, 0x4f, 0xf7, 0xaf, 0x07, 0xa1, 0x1f,
	0xfb, 0x6c, 0x6c, 0x77, 0x6b, 0x6e, 0xbe, 0xeb, 0xfb, 0xdd, 0x9e, 0x58, 0xb2, 0x03, 0x77, 0xc9,
	0xf6, 0x3c, 0x3f, 0xb6, 0x63, 0xd7, 0xf7, 0x22, 0x39, 0x83, 0xdf, 0x83, 0xda, 0x53, 0xbf, 0xeb,
	0x7a, 0x96, 0x78, 0xcb, 0x4e, 0x40, 0x45, 0xf4, 0x6d, 0xb7, 0xd7, 0x2a, 0x2d, 0x94, 0xbe, 0xa8,
	0x5b, 0xb2, 0xc3, 0xe6, 0xa0, 0x16, 0xd8, 0x51, 0xf4, 0xce, 0x0f, 0x3b, 0xad, 0x31, 0xfa, 0x90,
	0xf4, 0xf9, 0x55, 0x98, 0x5d, 0x19, 0xc4, 0x3b, 0xc2, 0x8b, 0x5d, 0x87, 0x60, 0x2d, 0x11, 0x21,
	0x4c, 0xec, 0xbf, 0x11, 0x9e, 0x86, 0xa1, 0x0e, 0xff, 0xaf, 0x31, 0xa8, 0xae, 0x38, 0x8e, 0x3f,
	0xf0, 0x62, 0xd6, 0x82, 0xaa, 0x13, 0x8a, 0x8e, 0x1b, 0x47, 0x6a, 0x8e, 0xee, 0x22, 0xb3, 0x41,
	0x24, 0x42, 0xcf, 0xee, 0x0b, 0xcd, 0x4c, 0xf7, 0x53, 0xf1, 0xc6, 0x4d, 0xf1, 0x18, 0x94, 0x83,
	0x9e, 0xed, 0xb5, 0xca, 0x34, 0x48, 0x6d, 0xc4, 0xb7, 0x3b, 0x9d, 0x50, 0x44, 0x51, 0xab, 0x22,
	0xf1, 0x55, 0x17, 0x67, 0x3b, 0x7e, 0x47, 0xb4, 0x26, 0xe4, 0x6c, 0x6c, 0xe3, 0x58, 0xdf, 0xdf,
	0x72, 0x5b, 0x55, 0x39, 0x86, 0x6d, 0x76, 0x1b, 0xea, 0x43, 0x3b, 0x74, 0xed, 0xad, 0x9e, 0x88,
	0x5a, 0xb5, 0x85, 0xf1, 0x2f, 0x1a, 0xcb, 0x73, 0xd7, 0x77, 0xb7, 0xae, 0xab, 0x15, 0x5c, 0x7f,
	0xa5, 0x3f, 0x3e, 0xf4, 0xe2, 0x70, 0xd7, 0x4a, 0x27, 0xcf, 0xfd, 0x08, 0xd3, 0xd9, 0x8f, 0xac,
	0x09, 0xe3, 0x6f, 0xc4, 0xae, 0x5a, 0x29, 0x36, 0xd9, 0x55, 0xa8, 0x0c, 0xed, 0xde, 0x40, 0x2e,
	0xb1, 0xb1, 0x7c, 0x1c, 0x91, 0x1f, 0x0b, 0x4f, 0x84, 0x76, 0x4f, 0xd3, 0x5a, 0x72, 0xc6, 0x9d,
	0xb1, 0xdb, 0x25, 0x5e, 0x85, 0xca, 0xc3, 0x7e, 0x10, 0xef, 0xf2, 0x73, 0x50, 0x5b, 0xeb, 0xa0,
	0xb2, 0xe3, 0x5d, 0x94, 0x9a, 0xb4, 0x24, 0x61, 0xa9, 0xcd, 0xef, 0x42, 0x7d, 0xc3, 0xed, 0x8b,
	0x28, 0xb6, 0xfb, 0x01, 0x2a, 0x21, 0x12, 0x8e, 0xef, 0x75, 0xa4, 0x92, 0xc7, 0x2d, 0xdd, 0x45,
	0x45, 0x7a, 0xb6, 0xe7, 0x47, 0xc4, 0xbe, 0x62, 0xc9, 0x0e, 0xff, 0x43, 0x09, 0x66, 0x72, 0x42,
	0x14, 0x31, 0x41, 0xea, 0x54, 0xf8, 0xba, 0x92, 0x93, 0x71, 0x98, 0xec, 0x88, 0x6d, 0x7b, 0xd0,
	0x8b, 0x5f, 0xd1, 0x47, 0xb9, 0x47, 0x99, 0x31, 0x76, 0x0e, 0xc0, 0x8d, 0x2c, 0xf1, 0x76, 0xe0,
	0x86, 0xa2, 0x43, 0x1b, 0x56, 0xb3, 0x8c, 0x11, 0xfc, 0x3e, 0x08, 0x3a, 0x76, 0x2c, 0x90, 0x37,
	0xed, 0x5c, 0xcd, 0x32, 0x46, 0x50, 0x9a, 0x78, 0x37, 0x48, 0x36, 0x0f, 0xdb, 0x6c, 0x01, 0x1a,
	0x1d, 0x11, 0x39, 0xa1, 0x1b, 0xa0, 0xf9, 0xa9, 0x3d, 0x34, 0x87, 0xc8, 0xd8, 0x76, 0x7c, 0xd7,
	0x51, 0x1b, 0x89, 0xc6, 0x26, 0xbb, 0xfc, 0x01, 0x4c, 0xaf, 0xc4, 0xb1, 0xed, 0xec, 0xec, 0xa7,
	0x54, 0x94, 0xca, 0xa6, 0x59, 0x7d, 0xe1, 0xc5, 0x6a, 0xd1, 0xc6, 0x08, 0xbf, 0x09, 0xb0, 0x12,
	0x04, 0x4f, 0xdd, 0x28, 0x56, 0x3e, 0xe4, 0x7a, 0x1d, 0xf1, 0x9e, 0x20, 0x2a, 0x96, 0xec, 0xa0,
	0x09, 0xd8, 0x41, 0xa0, 0x88, 0xb1, 0xc9, 0xcf, 0x43, 0x75, 0x5f, 0x12, 0x7e, 0x17, 0xa6, 0x70,
	0x42, 0x3b, 0xb6, 0xe3, 0x41, 0xa4, 0xdc, 0xaa, 0x00, 0x99, 0xf6, 0xb2, 0x2f, 0x70, 0x2f, 0x71,
	0x6d, 0xb2, 0xc3, 0xcf, 0x42, 0x65, 0x75, 0x67, 0xe0, 0xbd, 0xc1, 0xcf, 0x0e, 0x36, 0x88, 0x68,
	0xd2, 0x92, 0x1d, 0xde, 0x83, 0xe9, 0x75, 0x3f, 0x8c, 0xb7, 0xfd, 0xf0, 0x9d, 0x1d, 0x76, 0x10,
	0xbc, 0x09, 0xe3, 0xd1, 0xd0, 0xd1, 0x36, 0x1a, 0x0d, 0x1d, 0xa4, 0x0c, 0xfc, 0x30, 0x4e, 0x80,
	0xa9, 0x93, 0xfa, 0xf6, 0xb8, 0xc4, 0xa3, 0x0e, 0x9b, 0x87, 0x7a, 0x10, 0xfa, 0xef, 0x77, 0x9f,
	0xf8, 0x51, 0xac, 0x1c, 0x31, 0x1d, 0xe0, 0x77, 0x61, 0xe6, 0x81, 0xdf, 0xb7, 0x5d, 0x6f, 0x35,
	0x14, 0x76, 0x2c, 0x70, 0xc9, 0xa7, 0x60, 0xa2, 0x43, 0x43, 0x8a, 0xa3, 0xea, 0xa1, 0x18, 0x71,
	0x4f, 0xda, 0x65, 0xcd, 0xc2, 0x26, 0xff, 0xef, 0x31, 0x4d, 0x9d, 0x6a, 0xe2, 0x73, 0x0a, 0x1f,
	0x76, 0x2c, 0x3a, 0x44, 0xde, 0x58, 0x9e, 0x42, 0x07, 0x4a, 0x2c, 0xdf, 0xd2, 0x5f, 0x71, 0xa2,
	0x34, 0x9f, 0x8e, 0xf2, 0xb4, 0xfc, 0x44, 0xf5, 0x35, 0xd9, 0xf7, 0x71, 0x63, 0xdf, 0x53, 0x19,
	0xcb, 0x45, 0x32, 0xca, 0xc0, 0x82, 0x4d, 0xb6, 0xaa, 0x2d, 0x44, 0x74, 0x36, 0xfc, 0xd6, 0x04,
	0x45, 0x8b, 0x8b, 0xc8, 0x29, 0x27, 0xf8, 0xf5, 0x95, 0x64, 0x96, 0x0c, 0x1b, 0x06, 0x19, 0xc5,
	0x31, 0x3b, 0xde, 0xd1, 0x51, 0x08, 0xdb, 0x73, 0xdf, 0xc2, 0x4c, 0x8e, 0xa4, 0x20, 0x98, 0x14,
	0xfa, 0x23, 0xc5, 0x8d, 0x0d, 0x98, 0x92, 0x12, 0x48, 0x4b, 0x1b, 0x65, 0x42, 0xd7, 0xa0, 0x2a,
	0x97, 0x26, 0xf7, 0x5a, 0xc5, 0xa3, 0x9c, 0xec, 0x96, 0x9e, 0xc3, 0xff, 0xb1, 0x04, 0x4c, 0x4b,
	0x25, 0x27, 0xad, 0x79, 0xdb, 0xfe, 0xc8, 0x2d, 0x9d, 0x83, 0x9a, 0xf0, 0x3a, 0x81, 0xef, 0x26,
	0xce, 0x93, 0xf4, 0x31, 0x68, 0xe8, 0xf6, 0x06, 0x3a, 0xb6, 0x0a, 0x1a, 0xe6, 0x58, 0xa2, 0x97,
	0x72, 0xaa, 0x17, 0xfe, 0x0d, 0xcc, 0xbc, 0xf2, 0x7b, 0x83, 0xbe, 0x48, 0x2d, 0xaa, 0xc8, 0x73,
	0x19, 0x94, 0xa3, 0x40, 0x38, 0x8a, 0x2d, 0xb5, 0xf9, 0x26, 0x34, 0x24, 0xe9, 0x33, 0x3a, 0x89,
	0x3e, 0xc0, 0xe1, 0xd1, 0xda, 0xfb, 0x48, 0xbc, 0x8e, 0x62, 0x49, 0x91, 0xd3, 0x01, 0xfe, 0x3d,
	0x80, 0x64, 0xd0, 0x0e, 0x84, 0x33, 0x2a, 0x80, 0x3a, 0x3d, 0x3b, 0x8a, 0xf4, 0x86, 0x51, 0x87,
	0x84, 0x75, 0xff, 0x2e, 0x31, 0x41, 0x6c, 0xf3, 0xd7, 0x30, 0x9b, 0x62, 0xed, 0xbf, 0x89, 0x37,
	0xa0, 0x31, 0x4c, 0xa6, 0xea, 0x8d, 0x9c, 0xc6, 0x8d, 0x4c, 0x11, 0x2c, 0x73, 0x0a, 0xff, 0xbf,
	0x92, 0xd6, 0xe2, 0xa7, 0xf6, 0x2c, 0xae, 0xf6, 0xa5, 0x4c, 0x94, 0x79, 0x21, 0xe9, 0x1b, 0xfb,
	0x1c, 0x26, 0x48, 0xa7, 0xe8, 0x68, 0xb8, 0x94, 0x99, 0x74, 0x16, 0xed, 0x9c, 0xa5, 0x3e, 0xa3,
	0x91, 0xcb, 0xe1, 0x03, 0x8d, 0x5c, 0x2e, 0x3e, 0x63, 0xe4, 0xb9, 0xf5, 0x5b, 0x7a, 0x0e, 0xff,
	0xb9, 0x04, 0x93, 0x6b, 0xfd, 0xee, 0xa7, 0xd6, 0x0c, 0x9e, 0x70, 0x76, 0x37, 0x6a, 0x95, 0x29,
	0xe6, 0x52, 0x9b, 0x3f, 0x01, 0x58, 0xeb, 0x77, 0xf7, 0x5f, 0xdd, 0x25, 0x28, 0xbb, 0xfd, 0xae,
	0x5e, 0x5a, 0x13, 0x39, 0x9a, 0xd2, 0x5b, 0xf4, 0x95, 0xbf, 0x86, 0xc6, 0x5a, 0xbf, 0x7b, 0x7f,
	0xe0, 0xf6, 0x3a, 0xe8, 0x32, 0x97, 0x60, 0x2a, 0x14, 0x81, 0x1f, 0xb9, 0xb1, 0x1f, 0xee, 0x6e,
	0xd8, 0x5d, 0x65, 0xa4, 0xd9, 0x41, 0x76, 0x05, 0xa6, 0xd3, 0x81, 0xe7, 0x69, 0x5e, 0x96, 0x1b,
	0xe5, 0x6f, 0xa0, 0xd9, 0x16, 0xe1, 0xd0, 0x75, 0xc4, 0xaa, 0xef, 0x75, 0x5c, 0x3a, 0x7a, 0xe7,
	0xa1, 0xee, 0xe8, 0x8e, 0x42, 0x4f, 0x07, 0x30, 0x62, 0x84, 0xc2, 0x8e, 0x7c, 0x4f, 0x21, 0xaa,
	0x1e, 0xbb, 0x00, 0xe5, 0xd8, 0x55, 0x8a, 0xd9, 0xa3, 0x3e, 0xfa, 0xc4, 0xff, 0x58, 0x02, 0x58,
	0x0f, 0xfd, 0xce, 0xc0, 0x21, 0xa5, 0x14, 0x79, 0x59, 0x2e, 0x31, 0x18, 0xdb, 0x9b, 0x18, 0xcc,
	0xab, 0xcc, 0x71, 0x9c, 0x94, 0x56, 0x43, 0x3e, 0xeb, 0x3d, 0xdb, 0x53, 0x39, 0xe4, 0x5d, 0x33,
	0x03, 0x2c, 0xd3, 0x94, 0xb3, 0x34, 0x25, 0x61, 0xfb, 0x69, 0x93, 0xc0, 0x47, 0x30, 0xad, 0x58,
	0x93, 0x29, 0xf8, 0xef, 0x3e, 0x6c, 0xd5, 0x18, 0x9f, 0xd6, 0xc3, 0xce, 0xfe, 0xe6, 0x74, 0x05,
	0xca, 0xa1, 0xff, 0x4e, 0x9b, 0x13, 0x33, 0x96, 0xad, 0x78, 0x5b, 0xf4, 0x9d, 0xff, 0x7b, 0x09,
	0x66, 0xda, 0xe1, 0x70, 0xd5, 0xf7, 0xb6, 0xdd, 0x6e, 0x5b, 0xc4, 0xa3, 0x02, 0xf1, 0x2d, 0x98,
	0xa0, 0x85, 0x68, 0xc4, 0xf3, 0x88, 0x98, 0x23, 0xbc, 0x4e, 0x39, 0xa2, 0x52, 0xa5, 0x9a, 0x3e,
	0xf7, 0x0d, 0x34, 0x8c, 0xe1, 0x23, 0x1d, 0x7e, 0xbf, 0x2a, 0x41, 0x19, 0xb7, 0xf3, 0x03, 0x8d,
	0x03, 0xd3, 0x9f, 0xd0, 0x75, 0xa4, 0x15, 0x96, 0x2d, 0xd9, 0x41, 0x01, 0xfc, 0xed, 0x6d, 0x0a,
	0x5c, 0x65, 0x0b, 0x9b, 0xec, 0x2b, 0x98, 0x10, 0xef, 0xe3, 0xd0, 0xd6, 0x71, 0xea, 0x84, 0x36,
	0xa3, 0xeb, 0x0f, 0x69, 0x58, 0xad, 0x47, 0xce, 0xc1, 0xf5, 0x18, 0xc3, 0x47, 0x5a, 0xcf, 0xcf,
	0x65, 0x98, 0x6c, 0x87, 0xc3, 0x8f, 0x19, 0x91, 0x6e, 0x02, 0x24, 0xde, 0x19, 0x29, 0xb7, 0xa0,
	0xf5, 0xe4, 0x1d, 0xdb, 0x32, 0xe6, 0x25, 0xfa, 0x2d, 0x67, 0xe3, 0x18, 0xb9, 0x56, 0xc5, 0xb8,
	0x94, 0x71, 0x98, 0x1c, 0x3a, 0x76, 0xa0, 0xb0, 0x22, 0x95, 0xc5, 0x67, 0xc6, 0xd8, 0x8d, 0x34,
	0x15, 0xa9, 0x12, 0xfb, 0x53, 0x74, 0xe9, 0xda, 0x93, 0x6d, 0x24, 0xd9, 0x08, 0x86, 0x18, 0x9d,
	0x2e, 0xe8, 0xfc, 0x3e, 0x1d, 0x60, 0x5f, 0xc0, 0x4c, 0x24, 0xb1, 0x2d, 0xb1, 0x1d, 0x0a, 0xcf,
	0x11, 0xad, 0x3a, 0xb1, 0xcd, 0x0f, 0xe3, 0x2d, 0x61, 0xcb, 0x1f, 0x78, 0x98, 0xc0, 0x81, 0xbc,
	0x25, 0xa8, 0x2e, 0xfb, 0xd6, 0x0c, 0x04, 0x8d, 0x8c, 0xfd, 0xa6, 0x99, 0xdd, 0x27, 0x0d, 0x05,
	0xff, 0x59, 0x82, 0xc6, 0xfa, 0xc0, 0x43, 0x95, 0xac, 0xda, 0x61, 0xa7, 0xd0, 0xc2, 0x5b, 0x50,
	0xf5, 0x83, 0xd0, 0x8e, 0xfd, 0x50, 0x99, 0x92, 0xee, 0xb2, 0xaf, 0x13, 0x67, 0x94, 0x3b, 0x7c,
	0x86, 0x2c, 0x36, 0x85, 0xfb, 0xa5, 0x1d, 0xf1, 0x7f, 0x4a, 0x00, 0x6d, 0xad, 0xed, 0xc8, 0xb4,
	0xc6, 0xd2, 0xa1, 0xce, 0xc7, 0x31, 0x63, 0x55, 0x05, 0xfb, 0x39, 0x5e, 0xbc, 0x9f, 0x45, 0xcf,
	0x02, 0xcb, 0xe6, 0x71, 0x54, 0x21, 0xe6, 0xc5, 0xe6, 0x9d, 0x4e, 0xe3, 0xcf, 0x01, 0xda, 0xe1,
	0x70, 0xff, 0x70, 0xb9, 0x08, 0xb5, 0x48, 0x5b, 0xb5, 0x91, 0x78, 0xa5, 0x8b, 0xb6, 0x92, 0xef,
	0x94, 0x3d, 0xb7, 0xc3, 0xa1, 0x34, 0x65, 0x69, 0xd8, 0x18, 0x35, 0xef, 0xc0, 0xb4, 0x9d, 0xb9,
	0x8a, 0x2a, 0xe5, 0xb0, 0xd4, 0xfe, 0xf5, 0x17, 0x2b, 0x37, 0x73, 0xdf, 0x0c, 0x5b, 0x67, 0xcf,
	0xe3, 0x46, 0xf6, 0xfc, 0xff, 0x25, 0x8a, 0x24, 0x69, 0xee, 0xbc, 0x00, 0x8d, 0x40, 0x86, 0xf7,
	0xe7, 0xa9, 0x19, 0x99, 0x43, 0x85, 0x7b, 0xc1, 0x92, 0xe3, 0x33, 0xd5, 0xf0, 0xcd, 0xc4, 0xb6,
	0xe4, 0x89, 0x39, 0xaf, 0x03, 0xbd, 0xe6, 0xf5, 0x4b, 0x1b, 0xd7, 0xef, 0xca, 0x30, 0xb9, 0x12,
	0x04, 0x7f, 0x86, 0x3c, 0x6d, 0x8f, 0x75, 0xe5, 0xe3, 0x5b, 0xa5, 0x20, 0xbe, 0x65, 0x62, 0xc9,
	0x44, 0x1a, 0x4b, 0xcc, 0x25, 0x8c, 0x8e, 0x25, 0xec, 0xaf, 0xe1, 0x84, 0xf0, 0x86, 0x6e, 0xe8,
	0x7b, 0x78, 0x11, 0x49, 0xe6, 0xa9, 0x58, 0xb9, 0xb8, 0x07, 0xe9, 0x61, 0xc1, 0x64, 0x09, 0x5a,
	0x88, 0xc3, 0x16, 0xa1, 0xee, 0x7a, 0x51, 0x6c, 0x7b, 0x4e, 0xf2, 0xea, 0x35, 0x49, 0xb9, 0xa4,
	0x1a, 0xb4, 0xd2, 0xcf, 0xb9, 0xc3, 0xa2, 0x7e, 0xc8, 0xc3, 0x02, 0x73, 0x3e, 0x7f, 0x10, 0x8b,
	0x48, 0x45, 0x59, 0xd5, 0xfb, 0x08, 0x51, 0x72, 0xee, 0x31, 0x9c, 0x1e, 0xb9, 0xfe, 0x23, 0xd9,
	0xd8, 0x1b, 0xa8, 0x69, 0x05, 0x1c, 0xde, 0xbc, 0x8a, 0x3c, 0xa6, 0x09, 0xe3, 0xa1, 0xdd, 0x57,
	0x86, 0x84, 0x4d, 0x1c, 0x71, 0x82, 0x81, 0x32, 0x23, 0x6c, 0xf2, 0xff, 0x28, 0x91, 0x41, 0x1f,
	0x78, 0xb1, 0x25, 0xf3, 0x1b, 0x2b, 0x74, 0xbd, 0xf1, 0xd4, 0xf5, 0x4c, 0xa4, 0x5f, 0xda, 0xf5,
	0x7e, 0x80, 0xc6, 0x86, 0xed, 0xf6, 0x2c, 0xf1, 0x76, 0x20, 0xa2, 0x78, 0xd4, 0x4d, 0x37, 0x72,
	0x31, 0x48, 0x2b, 0x62, 0xea, 0xc8, 0x4b, 0x8e, 0x7a, 0xc6, 0x2d, 0x5b, 0xd4, 0xe6, 0xb7, 0xa1,
	0xd6, 0xde, 0x11, 0xbd, 0xde, 0xa8, 0x15, 0xb7, 0xa0, 0xea, 0xf8, 0xfd, 0xbe, 0xed, 0x75, 0xd4,
	0x7b, 0x94, 0xee, 0xf2, 0x7b, 0x50, 0x7b, 0xe9, 0x45, 0xa3, 0x73, 0xcf, 0x79, 0xd3, 0xe5, 0x24,
	0x6d, 0x3a, 0xc0, 0x6f, 0xc1, 0xd4, 0xea, 0x8e, 0xed, 0x75, 0x05, 0x65, 0xfe, 0x87, 0x57, 0x37,
	0xff, 0xdf, 0x12, 0xcc, 0xaf, 0x04, 0xc1, 0x4a, 0xa7, 0x53, 0x60, 0x64, 0xa3, 0x80, 0x9e, 0xe5,
	0x65, 0x69, 0x2c, 0x2f, 0xa9, 0x6d, 0x1a, 0x09, 0xb4, 0x4f, 0x6a, 0x71, 0xef, 0x10, 0x4e, 0x33,
	0x7a, 0xff, 0xbe, 0x85, 0x29, 0x0c, 0x16, 0xe1, 0xf0, 0xbe, 0xeb, 0x75, 0xf6, 0xd1, 0xbb, 0x3a,
	0xba, 0x74, 0x1a, 0xa1, 0xba, 0xfc, 0x5f, 0x4a, 0x30, 0x69, 0x89, 0xc8, 0x1f, 0x84, 0x8e, 0xa0,
	0xc8, 0x7b, 0x11, 0x2a, 0x51, 0x6c, 0x87, 0x71, 0xb1, 0x63, 0xc8, 0x6f, 0xb8, 0x1b, 0x51, 0x2c,
	0x82, 0x75, 0x11, 0xfa, 0x32, 0xee, 0x96, 0xad, 0x74, 0x60, 0x54, 0xa8, 0x75, 0xfc, 0x50, 0xd0,
	0x81, 0x52, 0xb6, 0xa8, 0xad, 0x1d, 0xa9, 0x42, 0x43, 0xd8, 0xe4, 0x5f, 0xc2, 0xf8, 0x13, 0x37,
	0x3d, 0xee, 0x4a, 0xe9, 0x71, 0x87, 0x93, 0x77, 0xdc, 0x98, 0xd4, 0x5d, 0xb6, 0xb0, 0x89, 0x67,
	0x30, 0x6c, 0x84, 0xf6, 0xf6, 0xb6, 0xeb, 0x7c, 0x44, 0xc1, 0xcf, 0x40, 0x79, 0xc7, 0x8d, 0xf5,
	0x49, 0x58, 0x45, 0xd4, 0x27, 0x6e, 0x6c, 0xd1, 0x20, 0xbf, 0x05, 0xd5, 0xa7, 0x76, 0x2c, 0x3c,
	0x67, 0xb7, 0x50, 0xe6, 0x16, 0x54, 0x7b, 0xf2, 0xb3, 0x92, 0x5b, 0x77, 0xf9, 0xbf, 0x96, 0x00,
	0x14, 0xe5, 0x47, 0x94, 0xfd, 0x2a, 0xd4, 0x25, 0x43, 0x37, 0x39, 0xca, 0x1b, 0x08, 0xad, 0x39,
	0xa7, 0x5f, 0xf9, 0xaf, 0x4b, 0x50, 0x5b, 0x71, 0x62, 0x77, 0x88, 0xa9, 0x88, 0xbe, 0xba, 0x97,
	0x46, 0x5e, 0xdd, 0xd9, 0x05, 0x18, 0x8f, 0xed, 0x2e, 0x89, 0x31, 0x2d, 0x5f, 0x75, 0x34, 0xf5,
	0x86, 0xdd, 0xb5, 0xf0, 0x5b, 0xa1, 0x44, 0xd9, 0x47, 0xb9, 0xf2, 0x9e, 0x47, 0x39, 0x5d, 0x1b,
	0xa8, 0x18, 0xb5, 0x81, 0xa4, 0x60, 0x34, 0x61, 0x16, 0x8c, 0x0e, 0xac, 0x18, 0xf0, 0xbf, 0x82,
	0x86, 0x96, 0x69, 0xf4, 0x93, 0xfe, 0x87, 0xad, 0x83, 0xbf, 0x84, 0x19, 0x3d, 0x6f, 0xff, 0xa4,
	0xf2, 0x2b, 0x00, 0x5b, 0x4e, 0x74, 0x93, 0x60, 0x31, 0x69, 0xb2, 0xb1, 0x8c, 0xef, 0x8b, 0xbf,
	0x2d, 0xa5, 0x32, 0x6f, 0xd8, 0x5d, 0x56, 0x83, 0xf2, 0x73, 0xdf, 0x13, 0xcd, 0x63, 0xd8, 0x7a,
	0x19, 0x89, 0xb0, 0x59, 0x62, 0x0d, 0xa8, 0xae, 0xdb, 0xbb, 0xa8, 0xad, 0xe6, 0x18, 0x9b, 0x81,
	0xc6, 0x4a, 0x10, 0xf4, 0x54, 0xd9, 0xae, 0x39, 0xce, 0x00, 0x26, 0x64, 0x52, 0xda, 0x2c, 0xe3,
	0x4c, 0x75, 0x8a, 0x37, 0x2b, 0xac, 0x0e, 0x95, 0xb5, 0xbe, 0xdd, 0x15, 0xcd, 0x09, 0x36, 0x0b,
	0x53, 0x2f, 0xb6, 0xfe, 0x56, 0x38, 0x71, 0x3b, 0xf6, 0x43, 0x1c, 0xaa, 0xb2, 0x26, 0x4c, 0xde,
	0xef, 0xf9, 0xce, 0x1b, 0x3d, 0x52, 0xc3, 0x49, 0x69, 0x5c, 0x71, 0xbd, 0x6e, 0xb3, 0xae, 0x86,
	0x1e, 0xf8, 0x7d, 0x3d, 0x04, 0x6a, 0xe8, 0x95, 0xdf, 0xd3, 0x43, 0x0d, 0x1c, 0x92, 0x99, 0xb1,
	0x1e, 0x9a, 0x5c, 0xfe, 0xf9, 0x0a, 0x8c, 0xfd, 0x74, 0x9f, 0x3d, 0x81, 0x0a, 0x15, 0x29, 0x19,
	0x29, 0x40, 0xd7, 0x2b, 0xe7, 0x4e, 0x92, 0x3a, 0xf2, 0xf5, 0x47, 0x3e, 0xf7, 0xcf, 0xbf, 0xf9,
	0xfd, 0xbf, 0x8d, 0x9d, 0xe0, 0x33, 0x4b, 0xc3, 0xe5, 0x25, 0x7b, 0x10, 0xef, 0x2c, 0x6d, 0xf6,
	0x90, 0xe4, 0x4e, 0x69, 0x91, 0xdd, 0x86, 0x89, 0xa7, 0x7e, 0xd7, 0x1f, 0xc4, 0xac, 0x8e, 0xc4,
	0x54, 0x56, 0x9b, 0x4b, 0x9b, 0xbc, 0x45, 0xb4, 0x8c, 0x35, 0x33, 0xb4, 0x38, 0xff, 0x16, 0x2a,
	0x98, 0x8a, 0x7f, 0xf4, 0xdc, 0x6d, 0x90, 0x37, 0x8c, 0xc2, 0x20, 0x6f, 0x12, 0x00, 0xb0, 0x1a,
	0x02, 0x0c, 0x22, 0x11, 0xb2, 0xef, 0x60, 0x4a, 0x7d, 0x7c, 0x49, 0x19, 0x25, 0x33, 0xe7, 0x67,
	0x89, 0x8f, 0x13, 0xf1, 0x14, 0x4f, 0x88, 0x51, 0xe4, 0x67, 0x30, 0xf3, 0xcc, 0xf7, 0xdc, 0xd8,
	0x0f, 0x5d, 0xaf, 0xfb, 0xe3, 0xc0, 0x8f, 0x6d, 0x93, 0x39, 0xbd, 0xf5, 0x99, 0x71, 0x98, 0x9f,
	0x25, 0x90, 0xcf, 0xd8, 0x49, 0x04, 0xe9, 0x27, 0x94, 0x4b, 0x9b, 0x6f, 0x89, 0xb6, 0x0d, 0x2c,
	0x85, 0xd3, 0x84, 0x52, 0xb1, 0xfa, 0x46, 0x71, 0x04, 0xd0, 0xbf, 0x47, 0xa3, 0xfe, 0x07, 0xb6,
	0x05, 0xb3, 0x29, 0xa8, 0x0a, 0xad, 0x39, 0x4c, 0xba, 0x12, 0xa5, 0x51, 0x97, 0x2f, 0x11, 0xe2,
	0x55, 0xf6, 0xf9, 0x5e, 0x31, 0x45, 0xe8, 0x8a, 0x68, 0x69, 0x33, 0x96, 0x93, 0x0b, 0x79, 0xe8,
	0xe0, 0x59, 0xc0, 0x23, 0x8d, 0x8e, 0x87, 0xe0, 0xa1, 0xc2, 0xaa, 0xe6, 0xf1, 0x13, 0x4c, 0x9a,
	0xde, 0xc9, 0x32, 0x7e, 0x8d, 0x26, 0x77, 0xdc, 0x1c, 0x50, 0x0e, 0xcc, 0x2f, 0x12, 0x9b, 0xb3,
	0xbc, 0x95, 0x67, 0xa3, 0x1c, 0x74, 0x17, 0xb7, 0x71, 0x15, 0x20, 0x2d, 0xc6, 0xb0, 0x69, 0x75,
	0xec, 0xab, 0x1a, 0xe0, 0xdc, 0x6c, 0x5a, 0x72, 0xd1, 0xa8, 0x8c, 0x50, 0x27, 0x19, 0x20, 0xaa,
	0x2a, 0xa6, 0x7c, 0xaf, 0x41, 0xc8, 0x06, 0xb3, 0x8b, 0x2f, 0xaa, 0xda, 0xf0, 0xd3, 0x04, 0x72,
	0x9c, 0xcd, 0xa6, 0x20, 0x7a, 0xad, 0xaf, 0x75, 0x61, 0x6d, 0xc3, 0xef, 0x76, 0x7b, 0x62, 0xe3,
	0x69, 0xfb, 0x30, 0x80, 0x97, 0x09, 0xf0, 0x3c, 0x3f, 0x6b, 0x00, 0x6e, 0xc6, 0x84, 0x70, 0x2d,
	0xee, 0x45, 0x1a, 0xfc, 0x05, 0x4c, 0x9a, 0x35, 0x3f, 0x66, 0x60, 0x25, 0x09, 0x69, 0x31, 0x83,
	0x93, 0xc4, 0x60, 0x86, 0x1b, 0xcb, 0x46, 0xf5, 0x3d, 0xd2, 0x80, 0x0f, 0x44, 0x4f, 0xc4, 0x79,
	0x83, 0x35, 0x3c, 0x58, 0x59, 0x2a, 0x67, 0xa6, 0x80, 0x1d, 0x22, 0x92, 0xde, 0x34, 0x9d, 0x2d,
	0xa9, 0x48, 0x77, 0xd4, 0xfb, 0x70, 0x32, 0x5b, 0x8c, 0xd0, 0x7b, 0xf1, 0x19, 0x81, 0xce, 0x32,
	0x0a, 0x29, 0xb2, 0x46, 0x70, 0x8d, 0xca, 0x14, 0xab, 0xba, 0xda, 0x33, 0x7a, 0x57, 0x33, 0xd5,
	0x89, 0xec, 0xae, 0x4a, 0x24, 0x96, 0x94, 0x8c, 0x46, 0xed, 0x6a, 0xae, 0x4c, 0x91, 0xdd, 0x55,
	0x09, 0x62, 0x28, 0xde, 0x2c, 0x8d, 0x31, 0x83, 0x3e, 0xa7, 0xf8, 0x3c, 0x68, 0x46, 0xf1, 0x12,
	0x54, 0x29, 0x5e, 0xce, 0x3c, 0x92, 0xe2, 0x95, 0x50, 0x86, 0xe2, 0xef, 0xc0, 0x09, 0x89, 0xf3,
	0x68, 0x63, 0xdd, 0x28, 0x3e, 0xe7, 0xf0, 0xe4, 0x5b, 0x73, 0xa6, 0x36, 0xcd, 0x8f, 0xb1, 0x7b,
	0x50, 0x55, 0x25, 0x90, 0x3d, 0x2a, 0x9e, 0x56, 0xb5, 0x0e, 0xad, 0xdf, 0x59, 0x92, 0xa2, 0xc1,
	0xea, 0x28, 0x85, 0x8b, 0xe7, 0x16, 0xbb, 0x4f, 0xd4, 0x05, 0xba, 0xdd, 0x53, 0x27, 0xc9, 0xee,
	0x33, 0x51, 0x2f, 0x6d, 0xba, 0x48, 0x78, 0x0b, 0xea, 0x6b, 0xfd, 0xee, 0x41, 0x2a, 0x50, 0xcc,
	0x17, 0x0d, 0xe6, 0xab, 0x50, 0xd3, 0x35, 0x17, 0x19, 0x4d, 0x8c, 0x0a, 0x8c, 0x49, 0x7a, 0x86,
	0x48, 0x4f, 0xf2, 0xa6, 0xc1, 0x79, 0x0b, 0xe7, 0xa1, 0xee, 0x1e, 0xa7, 0x85, 0x9b, 0xa7, 0x7e,
	0xb7, 0x88, 0x3f, 0x55, 0xfb, 0xb3, 0x51, 0xda, 0x04, 0xa1, 0x53, 0xec, 0x46, 0x89, 0x59, 0x30,
	0x63, 0x00, 0xe1, 0xf5, 0x4d, 0x0a, 0x65, 0x5c, 0xe4, 0x4c, 0x3c, 0x15, 0xd8, 0xd8, 0x99, 0x42,
	0xbc, 0xa5, 0x4d, 0xbc, 0xba, 0xb1, 0xbb, 0x50, 0x55, 0x05, 0x85, 0xac, 0x2b, 0x4d, 0xcb, 0xb2,
	0x81, 0x2e, 0x35, 0xe8, 0xc3, 0x8d, 0x35, 0x10, 0x4c, 0x3d, 0x2e, 0xb1, 0x55, 0x22, 0x2e, 0xd8,
	0x9b, 0xe9, 0x6c, 0xad, 0x45, 0x1f, 0xea, 0x8c, 0x19, 0xd4, 0xda, 0xe6, 0xbf, 0x83, 0xaa, 0x7a,
	0xa3, 0x2b, 0x36, 0x8f, 0xf4, 0x01, 0x2f, 0x2b, 0x84, 0xba, 0xca, 0xb0, 0x87, 0x44, 0x3f, 0xca,
	0x40, 0xcc, 0x77, 0xde, 0xac, 0x18, 0x8a, 0x5e, 0x8b, 0xf1, 0x18, 0xea, 0xc9, 0x53, 0x17, 0x6b,
	0xe6, 0x5f, 0xbe, 0x0a, 0xc0, 0x4e, 0x11, 0x58, 0x93, 0x9b, 0xc2, 0xe0, 0x76, 0xaf, 0xd0, 0x9b,
	0xe3, 0x03, 0x11, 0xc5, 0xa1, 0xbf, 0x3b, 0xda, 0xda, 0x94, 0x2c, 0x8b, 0x45, 0xb2, 0x58, 0x94,
	0x4b, 0xa5, 0x57, 0x5b, 0x36, 0x2b, 0x77, 0xd5, 0xb8, 0xea, 0x16, 0x08, 0x34, 0x4f, 0x88, 0xa7,
	0xf8, 0xac, 0x89, 0xb8, 0x89, 0xf7, 0x5d, 0x19, 0x3a, 0x6b, 0x72, 0x76, 0x18, 0x1f, 0xa8, 0xa7,
	0x0b, 0x84, 0x74, 0x86, 0x9f, 0xce, 0x20, 0xd1, 0x75, 0x44, 0x8b, 0xf8, 0x03, 0x69, 0xbd, 0x1d,
	0xfb, 0xc1, 0x81, 0x68, 0x0b, 0x84, 0x36, 0x27, 0x0f, 0x58, 0x03, 0xcd, 0x0f, 0x8c, 0xc3, 0xac,
	0x1d, 0x0e, 0xe5, 0x43, 0xa9, 0x3c, 0x27, 0xd8, 0x29, 0x05, 0x93, 0x7b, 0x6a, 0x2d, 0x80, 0x3f,
	0x47, 0xf0, 0x2d, 0x7e, 0x3c, 0x03, 0x9f, 0x9e, 0x3d, 0x0e, 0x81, 0x3f, 0x10, 0x1f, 0x04, 0x7e,
	0x85, 0xc0, 0x17, 0xf8, 0x99, 0x02, 0x70, 0x8c, 0x8f, 0x48, 0x89, 0x4c, 0x5e, 0x40, 0xa3, 0x1d,
	0x0e, 0x5f, 0x04, 0x42, 0xbe, 0xd2, 0xcf, 0xe4, 0x5e, 0xe5, 0x0b, 0x90, 0x75, 0xc0, 0x3d, 0x99,
	0x41, 0xf6, 0x35, 0xc2, 0x4d, 0x98, 0x6e, 0x87, 0xc3, 0xa3, 0x86, 0xda, 0x5b, 0xf2, 0x6d, 0x58,
	0x17, 0xe6, 0xe4, 0xf9, 0x91, 0x2b, 0xd5, 0x15, 0xc8, 0x72, 0x8c, 0x2d, 0x13, 0x3b, 0x39, 0x8d,
	0x1e, 0x64, 0x24, 0x3b, 0xfd, 0x36, 0x53, 0x48, 0xf3, 0x17, 0x50, 0x55, 0xbe, 0x5a, 0x10, 0x3a,
	0x0c, 0xaf, 0xcd, 0x84, 0x65, 0x3b, 0xbd, 0xb6, 0xb0, 0x35, 0x02, 0x18, 0xe5, 0xb9, 0xe6, 0x5b,
	0xa8, 0xde, 0x64, 0x76, 0x2a, 0x87, 0x91, 0x9a, 0x63, 0x3d, 0x79, 0x2d, 0x63, 0xcd, 0xfc, 0xe3,
	0x59, 0x01, 0x60, 0xf6, 0x9a, 0x91, 0x02, 0xe2, 0x66, 0x3e, 0xa4, 0x7f, 0xc2, 0x0e, 0xf4, 0x60,
	0x25, 0xd3, 0xe2, 0x28, 0x99, 0x5e, 0xd1, 0x25, 0xe9, 0x10, 0x5e, 0x9c, 0x11, 0x4c, 0x7b, 0xcb,
	0xc9, 0x3c, 0x6a, 0xe2, 0xc9, 0x97, 0x61, 0x02, 0xf5, 0xbe, 0xdf, 0x51, 0x72, 0xec, 0x46, 0x89,
	0xb5, 0xe5, 0x9f, 0x6d, 0x87, 0x38, 0x28, 0xae, 0x12, 0xcb, 0x8b, 0xec, 0xc2, 0x1e, 0x96, 0xc9,
	0x39, 0x61, 0xa6, 0xd8, 0x41, 0x70, 0x18, 0x03, 0xcb, 0x2c, 0x8a, 0x13, 0x87, 0x79, 0xfe, 0xd9,
	0x1e, 0x0e, 0x0e, 0x11, 0xe2, 0xb2, 0x5e, 0xc3, 0x74, 0x02, 0x3d, 0xd2, 0x04, 0x33, 0xa8, 0x4a,
	0x6e, 0x7e, 0x6e, 0x04, 0xea, 0xd2, 0xe6, 0x00, 0x89, 0x11, 0xfc, 0x9f, 0x4a, 0x70, 0x7a, 0xe4,
	0x3b, 0x1d, 0x5b, 0x38, 0xe8, 0x19, 0xaf, 0x80, 0xf9, 0x0d, 0x62, 0xbe, 0xc8, 0x2f, 0xef, 0x61,
	0x6e, 0x3c, 0xce, 0x5f, 0xd3, 0xcf, 0x7d, 0x28, 0xc3, 0x7b, 0x7a, 0x73, 0xb4, 0x44, 0xdf, 0x1f,
	0x8a, 0x22, 0x29, 0x0e, 0x5a, 0xee, 0x6d, 0xe2, 0xb8, 0xcc, 0xaf, 0x1d, 0x8a, 0xa3, 0x99, 0xbd,
	0xfd, 0x08, 0x35, 0xe2, 0x9c, 0x28, 0x75, 0x1f, 0x4f, 0xcb, 0x5c, 0x11, 0x32, 0x5c, 0x42, 0xa4,
	0x4f, 0x33, 0xd5, 0x2a, 0x91, 0x15, 0xc7, 0xff, 0x0c, 0xe2, 0x25, 0x42, 0x3c, 0xc7, 0xe7, 0xf7,
	0x20, 0x9a, 0x67, 0x80, 0x94, 0x71, 0xe4, 0xf9, 0x74, 0x48, 0x19, 0x33, 0x67, 0xd4, 0x23, 0x09,
	0xb9, 0x23, 0x7a, 0x3d, 0x09, 0xa9, 0x1f, 0xa9, 0x4d, 0xe3, 0xd7, 0x67, 0xdd, 0xa9, 0xbd, 0x58,
	0x38, 0x1b, 0xd5, 0xf7, 0x97, 0x30, 0x83, 0xc6, 0x41, 0xc7, 0x84, 0xcc, 0x82, 0x59, 0xfe, 0x87,
	0xa6, 0x23, 0xd9, 0x7c, 0x9a, 0x9e, 0x3b, 0x84, 0x2c, 0xcf, 0x26, 0x85, 0x5c, 0x50, 0x33, 0x2c,
	0x00, 0x5f, 0x24, 0xf0, 0x4b, 0xfc, 0xfc, 0x08, 0x70, 0xf3, 0x6c, 0xda, 0x34, 0xc4, 0x3f, 0xcc,
	0x01, 0x78, 0xc8, 0x55, 0xa4, 0x27, 0x6c, 0xd7, 0x58, 0xc5, 0x91, 0x19, 0x8c, 0x5e, 0xc9, 0xde,
	0x53, 0xf6, 0x15, 0x85, 0x34, 0xf5, 0x38, 0x25, 0xc3, 0x69, 0xe6, 0x11, 0xbc, 0x00, 0x3e, 0x73,
	0xbb, 0xcf, 0x6e, 0x6f, 0x9a, 0xb2, 0xfd, 0x8d, 0x2c, 0x43, 0x86, 0xc3, 0x97, 0xde, 0xe1, 0x91,
	0xbf, 0x24, 0xe4, 0xcb, 0x7c, 0x61, 0x14, 0x32, 0x86, 0x9f, 0x2d, 0xd7, 0xc3, 0x3b, 0xc0, 0xd6,
	0x04, 0xfd, 0xaf, 0xff, 0xf5, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x82, 0x62, 0x74, 0xdd,
	0x2f, 0x00, 0x00,
}
